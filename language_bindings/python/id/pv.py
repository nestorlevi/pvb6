# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_pv', [dirname(__file__)])
        except ImportError:
            import _pv
            return _pv
        if fp is not None:
            try:
                _mod = imp.load_module('_pv', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _pv = swig_import_helper()
    del swig_import_helper
else:
    import _pv
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


pv_STDIN = _pv.pv_STDIN
pv_STDOUT = _pv.pv_STDOUT
MAX_PRINTF_LENGTH = _pv.MAX_PRINTF_LENGTH
MAX_EVENT_LENGTH = _pv.MAX_EVENT_LENGTH
MAX_CLIENTS = _pv.MAX_CLIENTS
ID_ROOTWIDGET = _pv.ID_ROOTWIDGET
ID_EDITBAR = _pv.ID_EDITBAR
ID_TOOLBAR = _pv.ID_TOOLBAR
ID_STATUSBAR = _pv.ID_STATUSBAR
ID_MAINWINDOW = _pv.ID_MAINWINDOW
ID_HELP = _pv.ID_HELP
ID_COOKIE = _pv.ID_COOKIE
ID_TAB = _pv.ID_TAB
ID_OPTIONS = _pv.ID_OPTIONS
ID_DOCK_WIDGETS = _pv.ID_DOCK_WIDGETS
MAX_DOCK_WIDGETS = _pv.MAX_DOCK_WIDGETS
NULL_EVENT = _pv.NULL_EVENT
BUTTON_EVENT = _pv.BUTTON_EVENT
TEXT_EVENT = _pv.TEXT_EVENT
SLIDER_EVENT = _pv.SLIDER_EVENT
CHECKBOX_EVENT = _pv.CHECKBOX_EVENT
RADIOBUTTON_EVENT = _pv.RADIOBUTTON_EVENT
GL_IDLE_EVENT = _pv.GL_IDLE_EVENT
GL_PAINT_EVENT = _pv.GL_PAINT_EVENT
GL_INITIALIZE_EVENT = _pv.GL_INITIALIZE_EVENT
GL_RESIZE_EVENT = _pv.GL_RESIZE_EVENT
TAB_EVENT = _pv.TAB_EVENT
TABLE_CLICKED_EVENT = _pv.TABLE_CLICKED_EVENT
TABLE_TEXT_EVENT = _pv.TABLE_TEXT_EVENT
SELECTION_EVENT = _pv.SELECTION_EVENT
CLIPBOARD_EVENT = _pv.CLIPBOARD_EVENT
BUTTON_PRESSED_EVENT = _pv.BUTTON_PRESSED_EVENT
BUTTON_RELEASED_EVENT = _pv.BUTTON_RELEASED_EVENT
RIGHT_MOUSE_EVENT = _pv.RIGHT_MOUSE_EVENT
KEYBOARD_EVENT = _pv.KEYBOARD_EVENT
PLOT_MOUSE_MOVED_EVENT = _pv.PLOT_MOUSE_MOVED_EVENT
PLOT_MOUSE_PRESSED_EVENT = _pv.PLOT_MOUSE_PRESSED_EVENT
PLOT_MOUSE_RELEASED_EVENT = _pv.PLOT_MOUSE_RELEASED_EVENT
USER_EVENT = _pv.USER_EVENT
MOUSE_OVER_EVENT = _pv.MOUSE_OVER_EVENT
TQWidget = _pv.TQWidget
TQPushButton = _pv.TQPushButton
TQLabel = _pv.TQLabel
TQLineEdit = _pv.TQLineEdit
TQComboBox = _pv.TQComboBox
TQLCDNumber = _pv.TQLCDNumber
TQButtonGroup = _pv.TQButtonGroup
TQRadio = _pv.TQRadio
TQCheck = _pv.TQCheck
TQSlider = _pv.TQSlider
TQFrame = _pv.TQFrame
TQImage = _pv.TQImage
TQDraw = _pv.TQDraw
TQGl = _pv.TQGl
TQTabWidget = _pv.TQTabWidget
TQGroupBox = _pv.TQGroupBox
TQListBox = _pv.TQListBox
TQTable = _pv.TQTable
TQSpinBox = _pv.TQSpinBox
TQDial = _pv.TQDial
TQProgressBar = _pv.TQProgressBar
TQMultiLineEdit = _pv.TQMultiLineEdit
TQTextBrowser = _pv.TQTextBrowser
TQListView = _pv.TQListView
TQIconView = _pv.TQIconView
TQVtk = _pv.TQVtk
TQwtPlotWidget = _pv.TQwtPlotWidget
TQwtScale = _pv.TQwtScale
TQwtThermo = _pv.TQwtThermo
TQwtKnob = _pv.TQwtKnob
TQwtCounter = _pv.TQwtCounter
TQwtWheel = _pv.TQwtWheel
TQwtSlider = _pv.TQwtSlider
TQwtDial = _pv.TQwtDial
TQwtCompass = _pv.TQwtCompass
TQwtAnalogClock = _pv.TQwtAnalogClock
TQDateEdit = _pv.TQDateEdit
TQTimeEdit = _pv.TQTimeEdit
TQDateTimeEdit = _pv.TQDateTimeEdit
TQToolBox = _pv.TQToolBox
TQVbox = _pv.TQVbox
TQHbox = _pv.TQHbox
TQGrid = _pv.TQGrid
TQCustomWidget = _pv.TQCustomWidget
LINESTYLE_NONE = _pv.LINESTYLE_NONE
LINESTYLE_CIRCLE = _pv.LINESTYLE_CIRCLE
LINESTYLE_CROSS = _pv.LINESTYLE_CROSS
LINESTYLE_RECT = _pv.LINESTYLE_RECT
HELVETICA = _pv.HELVETICA
TIMES = _pv.TIMES
COURIER = _pv.COURIER
OLDENGLISH = _pv.OLDENGLISH
SYSTEM = _pv.SYSTEM
ANYSTYLE = _pv.ANYSTYLE
Light = _pv.Light
Normal = _pv.Normal
DemiBold = _pv.DemiBold
Bold = _pv.Bold
Black = _pv.Black
ALIGN_LEFT = _pv.ALIGN_LEFT
ALIGN_CENTER = _pv.ALIGN_CENTER
ALIGN_RIGHT = _pv.ALIGN_RIGHT
ALIGN_VERT_CENTER = _pv.ALIGN_VERT_CENTER
AlignAuto = _pv.AlignAuto
AlignLeft = _pv.AlignLeft
AlignRight = _pv.AlignRight
AlignHCenter = _pv.AlignHCenter
AlignJustify = _pv.AlignJustify
AlignHorizontal_Mask = _pv.AlignHorizontal_Mask
AlignTop = _pv.AlignTop
AlignBottom = _pv.AlignBottom
AlignVCenter = _pv.AlignVCenter
AlignVertical_Mask = _pv.AlignVertical_Mask
AlignCenter = _pv.AlignCenter
SingleLine = _pv.SingleLine
DontClip = _pv.DontClip
ExpandTabs = _pv.ExpandTabs
ShowPrefix = _pv.ShowPrefix
WordBreak = _pv.WordBreak
BreakAnywhere = _pv.BreakAnywhere
DontPrint = _pv.DontPrint
Underline = _pv.Underline
Overline = _pv.Overline
StrikeOut = _pv.StrikeOut
IncludeTrailingSpaces = _pv.IncludeTrailingSpaces
NoAccel = _pv.NoAccel
NoMove = _pv.NoMove
Start = _pv.Start
StartOfLine = _pv.StartOfLine
StartOfBlock = _pv.StartOfBlock
StartOfWord = _pv.StartOfWord
PreviousBlock = _pv.PreviousBlock
PreviousCharacter = _pv.PreviousCharacter
PreviousWord = _pv.PreviousWord
Up = _pv.Up
Left = _pv.Left
WordLeft = _pv.WordLeft
End = _pv.End
EndOfLine = _pv.EndOfLine
EndOfWord = _pv.EndOfWord
EndOfBlock = _pv.EndOfBlock
NextBlock = _pv.NextBlock
NextCharacter = _pv.NextCharacter
NextWord = _pv.NextWord
Down = _pv.Down
Right = _pv.Right
WordRight = _pv.WordRight
NORMAL = _pv.NORMAL
ITALIC = _pv.ITALIC
NoInsertion = _pv.NoInsertion
AtTop = _pv.AtTop
AtCurrent = _pv.AtCurrent
AtBottom = _pv.AtBottom
AfterCurrent = _pv.AfterCurrent
BeforeCurrent = _pv.BeforeCurrent
HEX = _pv.HEX
DEC = _pv.DEC
OCT = _pv.OCT
BINx = _pv.BINx
Hex = _pv.Hex
Dec = _pv.Dec
Oct = _pv.Oct
Bin = _pv.Bin
Outline = _pv.Outline
Filled = _pv.Filled
Flat = _pv.Flat
HORIZONTAL = _pv.HORIZONTAL
VERTICAL = _pv.VERTICAL
Horizontal = _pv.Horizontal
Vertical = _pv.Vertical
ArrowCursor = _pv.ArrowCursor
UpArrowCursor = _pv.UpArrowCursor
CrossCursor = _pv.CrossCursor
WaitCursor = _pv.WaitCursor
IBeamCursor = _pv.IBeamCursor
SizeVerCursor = _pv.SizeVerCursor
SizeHorCursor = _pv.SizeHorCursor
SizeFDiagCursor = _pv.SizeFDiagCursor
SizeBDiagCursor = _pv.SizeBDiagCursor
SizeAllCursor = _pv.SizeAllCursor
BlankCursor = _pv.BlankCursor
SplitVCursor = _pv.SplitVCursor
SplitHCursor = _pv.SplitHCursor
PointingHandCursor = _pv.PointingHandCursor
ForbiddenCursor = _pv.ForbiddenCursor
OpenHandCursor = _pv.OpenHandCursor
ClosedHandCursor = _pv.ClosedHandCursor
WhatsThisCursor = _pv.WhatsThisCursor
BusyCursor = _pv.BusyCursor
NoFrame = _pv.NoFrame
Box = _pv.Box
Panel = _pv.Panel
WinPanel = _pv.WinPanel
HLine = _pv.HLine
VLine = _pv.VLine
StyledPanel = _pv.StyledPanel
PopupPanel = _pv.PopupPanel
MenuBarPanel = _pv.MenuBarPanel
ToolBarPanel = _pv.ToolBarPanel
LineEditPanel = _pv.LineEditPanel
TabWidgetPanel = _pv.TabWidgetPanel
GroupBoxPanel = _pv.GroupBoxPanel
MShape = _pv.MShape
Plain = _pv.Plain
Raised = _pv.Raised
Sunken = _pv.Sunken
MShadow = _pv.MShadow
FileOpenDialog = _pv.FileOpenDialog
FileSaveDialog = _pv.FileSaveDialog
FindDirectoryDialog = _pv.FindDirectoryDialog
BoxInformation = _pv.BoxInformation
BoxWarning = _pv.BoxWarning
BoxCritical = _pv.BoxCritical
MessageBoxOk = _pv.MessageBoxOk
MessageBoxOpen = _pv.MessageBoxOpen
MessageBoxSave = _pv.MessageBoxSave
MessageBoxCancel = _pv.MessageBoxCancel
MessageBoxClose = _pv.MessageBoxClose
MessageBoxDiscard = _pv.MessageBoxDiscard
MessageBoxApply = _pv.MessageBoxApply
MessageBoxReset = _pv.MessageBoxReset
MessageBoxRestoreDefaults = _pv.MessageBoxRestoreDefaults
MessageBoxHelp = _pv.MessageBoxHelp
MessageBoxSaveAll = _pv.MessageBoxSaveAll
MessageBoxYes = _pv.MessageBoxYes
MessageBoxYesToAll = _pv.MessageBoxYesToAll
MessageBoxNo = _pv.MessageBoxNo
MessageBoxNoToAll = _pv.MessageBoxNoToAll
MessageBoxAbort = _pv.MessageBoxAbort
MessageBoxRetry = _pv.MessageBoxRetry
MessageBoxIgnore = _pv.MessageBoxIgnore
MessageBoxNoButton = _pv.MessageBoxNoButton
Home = _pv.Home
Forward = _pv.Forward
Backward = _pv.Backward
Reload = _pv.Reload
Top = _pv.Top
Bottom = _pv.Bottom
ShiftButton = _pv.ShiftButton
ControlButton = _pv.ControlButton
AltButton = _pv.AltButton
NormalKey = _pv.NormalKey
Key_Escape = _pv.Key_Escape
Key_Pause = _pv.Key_Pause
Key_Print = _pv.Key_Print
Key_SysReq = _pv.Key_SysReq
Key_PageUp = _pv.Key_PageUp
Key_PageDown = _pv.Key_PageDown
Key_F1 = _pv.Key_F1
Key_F2 = _pv.Key_F2
Key_F3 = _pv.Key_F3
Key_F4 = _pv.Key_F4
Key_F5 = _pv.Key_F5
Key_F6 = _pv.Key_F6
Key_F7 = _pv.Key_F7
Key_F8 = _pv.Key_F8
Key_F9 = _pv.Key_F9
Key_F10 = _pv.Key_F10
Key_F11 = _pv.Key_F11
Key_F12 = _pv.Key_F12
BottomLegend = _pv.BottomLegend
TopLegend = _pv.TopLegend
LeftLegend = _pv.LeftLegend
RightLegend = _pv.RightLegend
yLeft = _pv.yLeft
yRight = _pv.yRight
xBottom = _pv.xBottom
xTop = _pv.xTop
axisCnt = _pv.axisCnt
pvNone = _pv.pvNone
IncludeRef = _pv.IncludeRef
Symmetric = _pv.Symmetric
Floating = _pv.Floating
Logarithmic = _pv.Logarithmic
Inverted = _pv.Inverted
ScaleLeft = _pv.ScaleLeft
ScaleRight = _pv.ScaleRight
ScaleTop = _pv.ScaleTop
ScaleBottom = _pv.ScaleBottom
ThermoNone = _pv.ThermoNone
ThermoLeft = _pv.ThermoLeft
ThermoRight = _pv.ThermoRight
ThermoTop = _pv.ThermoTop
ThermoBottom = _pv.ThermoBottom
KnobLine = _pv.KnobLine
KnobDot = _pv.KnobDot
CounterButton1 = _pv.CounterButton1
CounterButton2 = _pv.CounterButton2
CounterButton3 = _pv.CounterButton3
CounterButtonCnt = _pv.CounterButtonCnt
SliderNone = _pv.SliderNone
SliderLeft = _pv.SliderLeft
SliderRight = _pv.SliderRight
SliderTop = _pv.SliderTop
SliderBottom = _pv.SliderBottom
SliderBgTrough = _pv.SliderBgTrough
SliderBgSlot = _pv.SliderBgSlot
SliderBgBoth = _pv.SliderBgBoth
DialPlain = _pv.DialPlain
DialRaised = _pv.DialRaised
DialSunken = _pv.DialSunken
RotateNeedle = _pv.RotateNeedle
RotateScale = _pv.RotateScale
QwtDialNeedle1 = _pv.QwtDialNeedle1
QwtDialNeedle2 = _pv.QwtDialNeedle2
QwtDialNeedle3 = _pv.QwtDialNeedle3
QwtDialNeedle4 = _pv.QwtDialNeedle4
QwtDialLineNeedle = _pv.QwtDialLineNeedle
QwtDialArrowNeedle = _pv.QwtDialArrowNeedle
QwtCompassNeedle1 = _pv.QwtCompassNeedle1
QwtCompassNeedle2 = _pv.QwtCompassNeedle2
QwtCompassNeedle3 = _pv.QwtCompassNeedle3
QwtCompassNeedle4 = _pv.QwtCompassNeedle4
QwtCompassLineNeedle = _pv.QwtCompassLineNeedle
NoPen = _pv.NoPen
SolidLine = _pv.SolidLine
DashLine = _pv.DashLine
DotLine = _pv.DotLine
DashDotLine = _pv.DashDotLine
DashDotDotLine = _pv.DashDotDotLine
MPenStyle = _pv.MPenStyle
MarkerNone = _pv.MarkerNone
MarkerEllipse = _pv.MarkerEllipse
MarkerRect = _pv.MarkerRect
MarkerDiamond = _pv.MarkerDiamond
MarkerTriangle = _pv.MarkerTriangle
MarkerDTriangle = _pv.MarkerDTriangle
MarkerUTriangle = _pv.MarkerUTriangle
MarkerLTriangle = _pv.MarkerLTriangle
MarkerRTriangle = _pv.MarkerRTriangle
MarkerCross = _pv.MarkerCross
MarkerXCross = _pv.MarkerXCross
MarkerStyleCnt = _pv.MarkerStyleCnt
NoButton = _pv.NoButton
LeftButton = _pv.LeftButton
MiddleButton = _pv.MiddleButton
RightButton = _pv.RightButton
DMY = _pv.DMY
MDY = _pv.MDY
YMD = _pv.YMD
YDM = _pv.YDM
HTML_HEADER = _pv.HTML_HEADER
HTML_STYLE = _pv.HTML_STYLE
HTML_BODY = _pv.HTML_BODY
class PARSE_EVENT_STRUCT(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PARSE_EVENT_STRUCT, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PARSE_EVENT_STRUCT, name)
    __repr__ = _swig_repr
    __swig_setmethods__["event"] = _pv.PARSE_EVENT_STRUCT_event_set
    __swig_getmethods__["event"] = _pv.PARSE_EVENT_STRUCT_event_get
    if _newclass:event = _swig_property(_pv.PARSE_EVENT_STRUCT_event_get, _pv.PARSE_EVENT_STRUCT_event_set)
    __swig_setmethods__["i"] = _pv.PARSE_EVENT_STRUCT_i_set
    __swig_getmethods__["i"] = _pv.PARSE_EVENT_STRUCT_i_get
    if _newclass:i = _swig_property(_pv.PARSE_EVENT_STRUCT_i_get, _pv.PARSE_EVENT_STRUCT_i_set)
    __swig_setmethods__["text"] = _pv.PARSE_EVENT_STRUCT_text_set
    __swig_getmethods__["text"] = _pv.PARSE_EVENT_STRUCT_text_get
    if _newclass:text = _swig_property(_pv.PARSE_EVENT_STRUCT_text_get, _pv.PARSE_EVENT_STRUCT_text_set)
    def __init__(self): 
        this = _pv.new_PARSE_EVENT_STRUCT()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_PARSE_EVENT_STRUCT
    __del__ = lambda self : None;
PARSE_EVENT_STRUCT_swigregister = _pv.PARSE_EVENT_STRUCT_swigregister
PARSE_EVENT_STRUCT_swigregister(PARSE_EVENT_STRUCT)
cvar = _pv.cvar
pvserver_version = cvar.pvserver_version

class PARAM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, PARAM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, PARAM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["s"] = _pv.PARAM_s_set
    __swig_getmethods__["s"] = _pv.PARAM_s_get
    if _newclass:s = _swig_property(_pv.PARAM_s_get, _pv.PARAM_s_set)
    __swig_setmethods__["os"] = _pv.PARAM_os_set
    __swig_getmethods__["os"] = _pv.PARAM_os_get
    if _newclass:os = _swig_property(_pv.PARAM_os_get, _pv.PARAM_os_set)
    __swig_setmethods__["port"] = _pv.PARAM_port_set
    __swig_getmethods__["port"] = _pv.PARAM_port_get
    if _newclass:port = _swig_property(_pv.PARAM_port_get, _pv.PARAM_port_set)
    __swig_setmethods__["language"] = _pv.PARAM_language_set
    __swig_getmethods__["language"] = _pv.PARAM_language_get
    if _newclass:language = _swig_property(_pv.PARAM_language_get, _pv.PARAM_language_set)
    __swig_setmethods__["convert_units"] = _pv.PARAM_convert_units_set
    __swig_getmethods__["convert_units"] = _pv.PARAM_convert_units_get
    if _newclass:convert_units = _swig_property(_pv.PARAM_convert_units_get, _pv.PARAM_convert_units_set)
    __swig_setmethods__["fp"] = _pv.PARAM_fp_set
    __swig_getmethods__["fp"] = _pv.PARAM_fp_get
    if _newclass:fp = _swig_property(_pv.PARAM_fp_get, _pv.PARAM_fp_set)
    __swig_setmethods__["sleep"] = _pv.PARAM_sleep_set
    __swig_getmethods__["sleep"] = _pv.PARAM_sleep_get
    if _newclass:sleep = _swig_property(_pv.PARAM_sleep_get, _pv.PARAM_sleep_set)
    __swig_setmethods__["cleanup"] = _pv.PARAM_cleanup_set
    __swig_getmethods__["cleanup"] = _pv.PARAM_cleanup_get
    if _newclass:cleanup = _swig_property(_pv.PARAM_cleanup_get, _pv.PARAM_cleanup_set)
    __swig_setmethods__["app_data"] = _pv.PARAM_app_data_set
    __swig_getmethods__["app_data"] = _pv.PARAM_app_data_get
    if _newclass:app_data = _swig_property(_pv.PARAM_app_data_get, _pv.PARAM_app_data_set)
    __swig_setmethods__["user"] = _pv.PARAM_user_set
    __swig_getmethods__["user"] = _pv.PARAM_user_get
    if _newclass:user = _swig_property(_pv.PARAM_user_get, _pv.PARAM_user_set)
    __swig_setmethods__["clipboard"] = _pv.PARAM_clipboard_set
    __swig_getmethods__["clipboard"] = _pv.PARAM_clipboard_get
    if _newclass:clipboard = _swig_property(_pv.PARAM_clipboard_get, _pv.PARAM_clipboard_set)
    __swig_setmethods__["clipboard_length"] = _pv.PARAM_clipboard_length_set
    __swig_getmethods__["clipboard_length"] = _pv.PARAM_clipboard_length_get
    if _newclass:clipboard_length = _swig_property(_pv.PARAM_clipboard_length_get, _pv.PARAM_clipboard_length_set)
    __swig_setmethods__["modal"] = _pv.PARAM_modal_set
    __swig_getmethods__["modal"] = _pv.PARAM_modal_get
    if _newclass:modal = _swig_property(_pv.PARAM_modal_get, _pv.PARAM_modal_set)
    __swig_setmethods__["readData"] = _pv.PARAM_readData_set
    __swig_getmethods__["readData"] = _pv.PARAM_readData_get
    if _newclass:readData = _swig_property(_pv.PARAM_readData_get, _pv.PARAM_readData_set)
    __swig_setmethods__["showData"] = _pv.PARAM_showData_set
    __swig_getmethods__["showData"] = _pv.PARAM_showData_get
    if _newclass:showData = _swig_property(_pv.PARAM_showData_get, _pv.PARAM_showData_set)
    __swig_setmethods__["modal_d"] = _pv.PARAM_modal_d_set
    __swig_getmethods__["modal_d"] = _pv.PARAM_modal_d_get
    if _newclass:modal_d = _swig_property(_pv.PARAM_modal_d_get, _pv.PARAM_modal_d_set)
    __swig_setmethods__["modalUserData"] = _pv.PARAM_modalUserData_set
    __swig_getmethods__["modalUserData"] = _pv.PARAM_modalUserData_get
    if _newclass:modalUserData = _swig_property(_pv.PARAM_modalUserData_get, _pv.PARAM_modalUserData_set)
    __swig_setmethods__["parse_event_struct"] = _pv.PARAM_parse_event_struct_set
    __swig_getmethods__["parse_event_struct"] = _pv.PARAM_parse_event_struct_get
    if _newclass:parse_event_struct = _swig_property(_pv.PARAM_parse_event_struct_get, _pv.PARAM_parse_event_struct_set)
    __swig_setmethods__["x"] = _pv.PARAM_x_set
    __swig_getmethods__["x"] = _pv.PARAM_x_get
    if _newclass:x = _swig_property(_pv.PARAM_x_get, _pv.PARAM_x_set)
    __swig_setmethods__["y"] = _pv.PARAM_y_set
    __swig_getmethods__["y"] = _pv.PARAM_y_get
    if _newclass:y = _swig_property(_pv.PARAM_y_get, _pv.PARAM_y_set)
    __swig_setmethods__["nxy"] = _pv.PARAM_nxy_set
    __swig_getmethods__["nxy"] = _pv.PARAM_nxy_get
    if _newclass:nxy = _swig_property(_pv.PARAM_nxy_get, _pv.PARAM_nxy_set)
    __swig_setmethods__["url"] = _pv.PARAM_url_set
    __swig_getmethods__["url"] = _pv.PARAM_url_get
    if _newclass:url = _swig_property(_pv.PARAM_url_get, _pv.PARAM_url_set)
    __swig_setmethods__["initial_mask"] = _pv.PARAM_initial_mask_set
    __swig_getmethods__["initial_mask"] = _pv.PARAM_initial_mask_get
    if _newclass:initial_mask = _swig_property(_pv.PARAM_initial_mask_get, _pv.PARAM_initial_mask_set)
    __swig_setmethods__["file_prefix"] = _pv.PARAM_file_prefix_set
    __swig_getmethods__["file_prefix"] = _pv.PARAM_file_prefix_get
    if _newclass:file_prefix = _swig_property(_pv.PARAM_file_prefix_get, _pv.PARAM_file_prefix_set)
    __swig_setmethods__["free"] = _pv.PARAM_free_set
    __swig_getmethods__["free"] = _pv.PARAM_free_get
    if _newclass:free = _swig_property(_pv.PARAM_free_get, _pv.PARAM_free_set)
    __swig_setmethods__["version"] = _pv.PARAM_version_set
    __swig_getmethods__["version"] = _pv.PARAM_version_get
    if _newclass:version = _swig_property(_pv.PARAM_version_get, _pv.PARAM_version_set)
    __swig_setmethods__["pvserver_version"] = _pv.PARAM_pvserver_version_set
    __swig_getmethods__["pvserver_version"] = _pv.PARAM_pvserver_version_get
    if _newclass:pvserver_version = _swig_property(_pv.PARAM_pvserver_version_get, _pv.PARAM_pvserver_version_set)
    __swig_setmethods__["exit_on_bind_error"] = _pv.PARAM_exit_on_bind_error_set
    __swig_getmethods__["exit_on_bind_error"] = _pv.PARAM_exit_on_bind_error_get
    if _newclass:exit_on_bind_error = _swig_property(_pv.PARAM_exit_on_bind_error_get, _pv.PARAM_exit_on_bind_error_set)
    __swig_setmethods__["hello_counter"] = _pv.PARAM_hello_counter_set
    __swig_getmethods__["hello_counter"] = _pv.PARAM_hello_counter_get
    if _newclass:hello_counter = _swig_property(_pv.PARAM_hello_counter_get, _pv.PARAM_hello_counter_set)
    __swig_setmethods__["local_milliseconds"] = _pv.PARAM_local_milliseconds_set
    __swig_getmethods__["local_milliseconds"] = _pv.PARAM_local_milliseconds_get
    if _newclass:local_milliseconds = _swig_property(_pv.PARAM_local_milliseconds_get, _pv.PARAM_local_milliseconds_set)
    __swig_setmethods__["force_null_event"] = _pv.PARAM_force_null_event_set
    __swig_getmethods__["force_null_event"] = _pv.PARAM_force_null_event_get
    if _newclass:force_null_event = _swig_property(_pv.PARAM_force_null_event_get, _pv.PARAM_force_null_event_set)
    __swig_setmethods__["allow_pause"] = _pv.PARAM_allow_pause_set
    __swig_getmethods__["allow_pause"] = _pv.PARAM_allow_pause_get
    if _newclass:allow_pause = _swig_property(_pv.PARAM_allow_pause_get, _pv.PARAM_allow_pause_set)
    __swig_setmethods__["pause"] = _pv.PARAM_pause_set
    __swig_getmethods__["pause"] = _pv.PARAM_pause_get
    if _newclass:pause = _swig_property(_pv.PARAM_pause_get, _pv.PARAM_pause_set)
    __swig_setmethods__["my_pvlock_count"] = _pv.PARAM_my_pvlock_count_set
    __swig_getmethods__["my_pvlock_count"] = _pv.PARAM_my_pvlock_count_get
    if _newclass:my_pvlock_count = _swig_property(_pv.PARAM_my_pvlock_count_get, _pv.PARAM_my_pvlock_count_set)
    __swig_setmethods__["num_additional_widgets"] = _pv.PARAM_num_additional_widgets_set
    __swig_getmethods__["num_additional_widgets"] = _pv.PARAM_num_additional_widgets_get
    if _newclass:num_additional_widgets = _swig_property(_pv.PARAM_num_additional_widgets_get, _pv.PARAM_num_additional_widgets_set)
    __swig_setmethods__["mouse_x"] = _pv.PARAM_mouse_x_set
    __swig_getmethods__["mouse_x"] = _pv.PARAM_mouse_x_get
    if _newclass:mouse_x = _swig_property(_pv.PARAM_mouse_x_get, _pv.PARAM_mouse_x_set)
    __swig_setmethods__["mouse_y"] = _pv.PARAM_mouse_y_set
    __swig_getmethods__["mouse_y"] = _pv.PARAM_mouse_y_get
    if _newclass:mouse_y = _swig_property(_pv.PARAM_mouse_y_get, _pv.PARAM_mouse_y_set)
    __swig_setmethods__["mytext"] = _pv.PARAM_mytext_set
    __swig_getmethods__["mytext"] = _pv.PARAM_mytext_get
    if _newclass:mytext = _swig_property(_pv.PARAM_mytext_get, _pv.PARAM_mytext_set)
    __swig_setmethods__["communication_plugin"] = _pv.PARAM_communication_plugin_set
    __swig_getmethods__["communication_plugin"] = _pv.PARAM_communication_plugin_get
    if _newclass:communication_plugin = _swig_property(_pv.PARAM_communication_plugin_get, _pv.PARAM_communication_plugin_set)
    __swig_setmethods__["use_communication_plugin"] = _pv.PARAM_use_communication_plugin_set
    __swig_getmethods__["use_communication_plugin"] = _pv.PARAM_use_communication_plugin_get
    if _newclass:use_communication_plugin = _swig_property(_pv.PARAM_use_communication_plugin_get, _pv.PARAM_use_communication_plugin_set)
    __swig_setmethods__["lang_section"] = _pv.PARAM_lang_section_set
    __swig_getmethods__["lang_section"] = _pv.PARAM_lang_section_get
    if _newclass:lang_section = _swig_property(_pv.PARAM_lang_section_get, _pv.PARAM_lang_section_set)
    __swig_setmethods__["mytext2"] = _pv.PARAM_mytext2_set
    __swig_getmethods__["mytext2"] = _pv.PARAM_mytext2_get
    if _newclass:mytext2 = _swig_property(_pv.PARAM_mytext2_get, _pv.PARAM_mytext2_set)
    __swig_setmethods__["http"] = _pv.PARAM_http_set
    __swig_getmethods__["http"] = _pv.PARAM_http_get
    if _newclass:http = _swig_property(_pv.PARAM_http_get, _pv.PARAM_http_set)
    __swig_setmethods__["fptmp"] = _pv.PARAM_fptmp_set
    __swig_getmethods__["fptmp"] = _pv.PARAM_fptmp_get
    if _newclass:fptmp = _swig_property(_pv.PARAM_fptmp_get, _pv.PARAM_fptmp_set)
    __swig_setmethods__["fhdltmp"] = _pv.PARAM_fhdltmp_set
    __swig_getmethods__["fhdltmp"] = _pv.PARAM_fhdltmp_get
    if _newclass:fhdltmp = _swig_property(_pv.PARAM_fhdltmp_get, _pv.PARAM_fhdltmp_set)
    def __init__(self): 
        this = _pv.new_PARAM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_PARAM
    __del__ = lambda self : None;
PARAM_swigregister = _pv.PARAM_swigregister
PARAM_swigregister(PARAM)

DEFAULT_LANGUAGE = _pv.DEFAULT_LANGUAGE
MM2INCH = _pv.MM2INCH
INCH2MM = _pv.INCH2MM
CM2FOOT = _pv.CM2FOOT
FOOT2CM = _pv.FOOT2CM
CM2YARD = _pv.CM2YARD
YARD2CM = _pv.YARD2CM
KM2MILE = _pv.KM2MILE
MILE2KM = _pv.MILE2KM
KM2NAUTICAL_MILE = _pv.KM2NAUTICAL_MILE
NAUTICAL_MILE2KM = _pv.NAUTICAL_MILE2KM
QMM2SQINCH = _pv.QMM2SQINCH
SQINCH2QMM = _pv.SQINCH2QMM
QCM2SQFOOT = _pv.QCM2SQFOOT
SQFOOT2QCM = _pv.SQFOOT2QCM
QM2SQYARD = _pv.QM2SQYARD
SQYARD2QM = _pv.SQYARD2QM
QM2ACRE = _pv.QM2ACRE
ACRE2QM = _pv.ACRE2QM
QKM2SQMILE = _pv.QKM2SQMILE
SQMILE2QKM = _pv.SQMILE2QKM
ML2TEASPOON = _pv.ML2TEASPOON
TEASPOON2ML = _pv.TEASPOON2ML
ML2TABLESPOON = _pv.ML2TABLESPOON
TABLESPOON2ML = _pv.TABLESPOON2ML
ML2OUNCE = _pv.ML2OUNCE
OUNCE2ML = _pv.OUNCE2ML
L2CUP = _pv.L2CUP
CUP2L = _pv.CUP2L
L2PINT = _pv.L2PINT
PINT2L = _pv.PINT2L
L2QUART = _pv.L2QUART
QUART2L = _pv.QUART2L
L2GALLON = _pv.L2GALLON
GALLON2L = _pv.GALLON2L
GR2OUNCE = _pv.GR2OUNCE
OUNCE2GR = _pv.OUNCE2GR
KG2POUND = _pv.KG2POUND
POUND2KG = _pv.POUND2KG
T2TON = _pv.T2TON
TON2T = _pv.TON2T
C2FAHRENHEIT = _pv.C2FAHRENHEIT
FAHRENHEIT2C = _pv.FAHRENHEIT2C
PLAIN_TEXT_EVENT = _pv.PLAIN_TEXT_EVENT
SVG_LEFT_BUTTON_PRESSED = _pv.SVG_LEFT_BUTTON_PRESSED
SVG_MIDDLE_BUTTON_PRESSED = _pv.SVG_MIDDLE_BUTTON_PRESSED
SVG_RIGHT_BUTTON_PRESSED = _pv.SVG_RIGHT_BUTTON_PRESSED
SVG_LEFT_BUTTON_RELEASED = _pv.SVG_LEFT_BUTTON_RELEASED
SVG_MIDDLE_BUTTON_RELEASED = _pv.SVG_MIDDLE_BUTTON_RELEASED
SVG_RIGHT_BUTTON_RELEASED = _pv.SVG_RIGHT_BUTTON_RELEASED
SVG_BOUNDS_ON_ELEMENT = _pv.SVG_BOUNDS_ON_ELEMENT
SVG_MATRIX_FOR_ELEMENT = _pv.SVG_MATRIX_FOR_ELEMENT
WIDGET_GEOMETRY = _pv.WIDGET_GEOMETRY
PARENT_WIDGET_ID = _pv.PARENT_WIDGET_ID
class IntegerArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IntegerArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IntegerArray, name)
    __repr__ = _swig_repr
    __swig_setmethods__["i"] = _pv.IntegerArray_i_set
    __swig_getmethods__["i"] = _pv.IntegerArray_i_get
    if _newclass:i = _swig_property(_pv.IntegerArray_i_get, _pv.IntegerArray_i_set)
    __swig_setmethods__["i0"] = _pv.IntegerArray_i0_set
    __swig_getmethods__["i0"] = _pv.IntegerArray_i0_get
    if _newclass:i0 = _swig_property(_pv.IntegerArray_i0_get, _pv.IntegerArray_i0_set)
    __swig_setmethods__["i1"] = _pv.IntegerArray_i1_set
    __swig_getmethods__["i1"] = _pv.IntegerArray_i1_get
    if _newclass:i1 = _swig_property(_pv.IntegerArray_i1_get, _pv.IntegerArray_i1_set)
    __swig_setmethods__["i2"] = _pv.IntegerArray_i2_set
    __swig_getmethods__["i2"] = _pv.IntegerArray_i2_get
    if _newclass:i2 = _swig_property(_pv.IntegerArray_i2_get, _pv.IntegerArray_i2_set)
    __swig_setmethods__["i3"] = _pv.IntegerArray_i3_set
    __swig_getmethods__["i3"] = _pv.IntegerArray_i3_get
    if _newclass:i3 = _swig_property(_pv.IntegerArray_i3_get, _pv.IntegerArray_i3_set)
    __swig_setmethods__["i4"] = _pv.IntegerArray_i4_set
    __swig_getmethods__["i4"] = _pv.IntegerArray_i4_get
    if _newclass:i4 = _swig_property(_pv.IntegerArray_i4_get, _pv.IntegerArray_i4_set)
    __swig_setmethods__["i5"] = _pv.IntegerArray_i5_set
    __swig_getmethods__["i5"] = _pv.IntegerArray_i5_get
    if _newclass:i5 = _swig_property(_pv.IntegerArray_i5_get, _pv.IntegerArray_i5_set)
    __swig_setmethods__["i6"] = _pv.IntegerArray_i6_set
    __swig_getmethods__["i6"] = _pv.IntegerArray_i6_get
    if _newclass:i6 = _swig_property(_pv.IntegerArray_i6_get, _pv.IntegerArray_i6_set)
    __swig_setmethods__["i7"] = _pv.IntegerArray_i7_set
    __swig_getmethods__["i7"] = _pv.IntegerArray_i7_get
    if _newclass:i7 = _swig_property(_pv.IntegerArray_i7_get, _pv.IntegerArray_i7_set)
    __swig_setmethods__["i8"] = _pv.IntegerArray_i8_set
    __swig_getmethods__["i8"] = _pv.IntegerArray_i8_get
    if _newclass:i8 = _swig_property(_pv.IntegerArray_i8_get, _pv.IntegerArray_i8_set)
    __swig_setmethods__["i9"] = _pv.IntegerArray_i9_set
    __swig_getmethods__["i9"] = _pv.IntegerArray_i9_get
    if _newclass:i9 = _swig_property(_pv.IntegerArray_i9_get, _pv.IntegerArray_i9_set)
    def __init__(self): 
        this = _pv.new_IntegerArray()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_IntegerArray
    __del__ = lambda self : None;
IntegerArray_swigregister = _pv.IntegerArray_swigregister
IntegerArray_swigregister(IntegerArray)
null_string = cvar.null_string

class FloatArray(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, FloatArray, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, FloatArray, name)
    __repr__ = _swig_repr
    __swig_setmethods__["f"] = _pv.FloatArray_f_set
    __swig_getmethods__["f"] = _pv.FloatArray_f_get
    if _newclass:f = _swig_property(_pv.FloatArray_f_get, _pv.FloatArray_f_set)
    __swig_setmethods__["f0"] = _pv.FloatArray_f0_set
    __swig_getmethods__["f0"] = _pv.FloatArray_f0_get
    if _newclass:f0 = _swig_property(_pv.FloatArray_f0_get, _pv.FloatArray_f0_set)
    __swig_setmethods__["f1"] = _pv.FloatArray_f1_set
    __swig_getmethods__["f1"] = _pv.FloatArray_f1_get
    if _newclass:f1 = _swig_property(_pv.FloatArray_f1_get, _pv.FloatArray_f1_set)
    __swig_setmethods__["f2"] = _pv.FloatArray_f2_set
    __swig_getmethods__["f2"] = _pv.FloatArray_f2_get
    if _newclass:f2 = _swig_property(_pv.FloatArray_f2_get, _pv.FloatArray_f2_set)
    __swig_setmethods__["f3"] = _pv.FloatArray_f3_set
    __swig_getmethods__["f3"] = _pv.FloatArray_f3_get
    if _newclass:f3 = _swig_property(_pv.FloatArray_f3_get, _pv.FloatArray_f3_set)
    __swig_setmethods__["f4"] = _pv.FloatArray_f4_set
    __swig_getmethods__["f4"] = _pv.FloatArray_f4_get
    if _newclass:f4 = _swig_property(_pv.FloatArray_f4_get, _pv.FloatArray_f4_set)
    __swig_setmethods__["f5"] = _pv.FloatArray_f5_set
    __swig_getmethods__["f5"] = _pv.FloatArray_f5_get
    if _newclass:f5 = _swig_property(_pv.FloatArray_f5_get, _pv.FloatArray_f5_set)
    __swig_setmethods__["f6"] = _pv.FloatArray_f6_set
    __swig_getmethods__["f6"] = _pv.FloatArray_f6_get
    if _newclass:f6 = _swig_property(_pv.FloatArray_f6_get, _pv.FloatArray_f6_set)
    __swig_setmethods__["f7"] = _pv.FloatArray_f7_set
    __swig_getmethods__["f7"] = _pv.FloatArray_f7_get
    if _newclass:f7 = _swig_property(_pv.FloatArray_f7_get, _pv.FloatArray_f7_set)
    __swig_setmethods__["f8"] = _pv.FloatArray_f8_set
    __swig_getmethods__["f8"] = _pv.FloatArray_f8_get
    if _newclass:f8 = _swig_property(_pv.FloatArray_f8_get, _pv.FloatArray_f8_set)
    __swig_setmethods__["f9"] = _pv.FloatArray_f9_set
    __swig_getmethods__["f9"] = _pv.FloatArray_f9_get
    if _newclass:f9 = _swig_property(_pv.FloatArray_f9_get, _pv.FloatArray_f9_set)
    def __init__(self): 
        this = _pv.new_FloatArray()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_FloatArray
    __del__ = lambda self : None;
FloatArray_swigregister = _pv.FloatArray_swigregister
FloatArray_swigregister(FloatArray)

class pvTime(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pvTime, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pvTime, name)
    __repr__ = _swig_repr
    __swig_setmethods__["millisecond"] = _pv.pvTime_millisecond_set
    __swig_getmethods__["millisecond"] = _pv.pvTime_millisecond_get
    if _newclass:millisecond = _swig_property(_pv.pvTime_millisecond_get, _pv.pvTime_millisecond_set)
    __swig_setmethods__["second"] = _pv.pvTime_second_set
    __swig_getmethods__["second"] = _pv.pvTime_second_get
    if _newclass:second = _swig_property(_pv.pvTime_second_get, _pv.pvTime_second_set)
    __swig_setmethods__["minute"] = _pv.pvTime_minute_set
    __swig_getmethods__["minute"] = _pv.pvTime_minute_get
    if _newclass:minute = _swig_property(_pv.pvTime_minute_get, _pv.pvTime_minute_set)
    __swig_setmethods__["hour"] = _pv.pvTime_hour_set
    __swig_getmethods__["hour"] = _pv.pvTime_hour_get
    if _newclass:hour = _swig_property(_pv.pvTime_hour_get, _pv.pvTime_hour_set)
    __swig_setmethods__["day"] = _pv.pvTime_day_set
    __swig_getmethods__["day"] = _pv.pvTime_day_get
    if _newclass:day = _swig_property(_pv.pvTime_day_get, _pv.pvTime_day_set)
    __swig_setmethods__["month"] = _pv.pvTime_month_set
    __swig_getmethods__["month"] = _pv.pvTime_month_get
    if _newclass:month = _swig_property(_pv.pvTime_month_get, _pv.pvTime_month_set)
    __swig_setmethods__["year"] = _pv.pvTime_year_set
    __swig_getmethods__["year"] = _pv.pvTime_year_get
    if _newclass:year = _swig_property(_pv.pvTime_year_get, _pv.pvTime_year_set)
    def __init__(self): 
        this = _pv.new_pvTime()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_pvTime
    __del__ = lambda self : None;
pvTime_swigregister = _pv.pvTime_swigregister
pvTime_swigregister(pvTime)

class pvAddressTableItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pvAddressTableItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pvAddressTableItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["s"] = _pv.pvAddressTableItem_s_set
    __swig_getmethods__["s"] = _pv.pvAddressTableItem_s_get
    if _newclass:s = _swig_property(_pv.pvAddressTableItem_s_get, _pv.pvAddressTableItem_s_set)
    __swig_setmethods__["version"] = _pv.pvAddressTableItem_version_set
    __swig_getmethods__["version"] = _pv.pvAddressTableItem_version_get
    if _newclass:version = _swig_property(_pv.pvAddressTableItem_version_get, _pv.pvAddressTableItem_version_set)
    __swig_setmethods__["adr"] = _pv.pvAddressTableItem_adr_set
    __swig_getmethods__["adr"] = _pv.pvAddressTableItem_adr_get
    if _newclass:adr = _swig_property(_pv.pvAddressTableItem_adr_get, _pv.pvAddressTableItem_adr_set)
    def __init__(self): 
        this = _pv.new_pvAddressTableItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_pvAddressTableItem
    __del__ = lambda self : None;
pvAddressTableItem_swigregister = _pv.pvAddressTableItem_swigregister
pvAddressTableItem_swigregister(pvAddressTableItem)

class pvAddressTable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pvAddressTable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pvAddressTable, name)
    __repr__ = _swig_repr
    __swig_setmethods__["adr"] = _pv.pvAddressTable_adr_set
    __swig_getmethods__["adr"] = _pv.pvAddressTable_adr_get
    if _newclass:adr = _swig_property(_pv.pvAddressTable_adr_get, _pv.pvAddressTable_adr_set)
    def __init__(self): 
        this = _pv.new_pvAddressTable()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_pvAddressTable
    __del__ = lambda self : None;
pvAddressTable_swigregister = _pv.pvAddressTable_swigregister
pvAddressTable_swigregister(pvAddressTable)

INITIALIZE_GL = _pv.INITIALIZE_GL
RESIZE_GL = _pv.RESIZE_GL

def glencode_set_param(*args):
  return _pv.glencode_set_param(*args)
glencode_set_param = _pv.glencode_set_param

def pvlock(*args):
  return _pv.pvlock(*args)
pvlock = _pv.pvlock

def pvunlock(*args):
  return _pv.pvunlock(*args)
pvunlock = _pv.pvunlock

def pvsystem(*args):
  return _pv.pvsystem(*args)
pvsystem = _pv.pvsystem

def pvGetLocalTime(*args):
  return _pv.pvGetLocalTime(*args)
pvGetLocalTime = _pv.pvGetLocalTime

def pvIsAccessAllowed(*args):
  return _pv.pvIsAccessAllowed(*args)
pvIsAccessAllowed = _pv.pvIsAccessAllowed

def pvSendVersion(*args):
  return _pv.pvSendVersion(*args)
pvSendVersion = _pv.pvSendVersion

def pvXYAllocate(*args):
  return _pv.pvXYAllocate(*args)
pvXYAllocate = _pv.pvXYAllocate

def getIntegers(*args):
  return _pv.getIntegers(*args)
getIntegers = _pv.getIntegers

def getFloats(*args):
  return _pv.getFloats(*args)
getFloats = _pv.getFloats

def getTextFromText(*args):
  return _pv.getTextFromText(*args)
getTextFromText = _pv.getTextFromText

def pvSetXY(*args):
  return _pv.pvSetXY(*args)
pvSetXY = _pv.pvSetXY

def pvGetSocketPointer(*args):
  return _pv.pvGetSocketPointer(*args)
pvGetSocketPointer = _pv.pvGetSocketPointer

def pvInitInternal(*args):
  return _pv.pvInitInternal(*args)
pvInitInternal = _pv.pvInitInternal

def pvInit(*args):
  return _pv.pvInit(*args)
pvInit = _pv.pvInit

def pvAccept(*args):
  return _pv.pvAccept(*args)
pvAccept = _pv.pvAccept

def pvCreateThread(*args):
  return _pv.pvCreateThread(*args)
pvCreateThread = _pv.pvCreateThread

def pvGetInitialMask(*args):
  return _pv.pvGetInitialMask(*args)
pvGetInitialMask = _pv.pvGetInitialMask

def pvMain(*args):
  return _pv.pvMain(*args)
pvMain = _pv.pvMain

def pvSetCleanup(*args):
  return _pv.pvSetCleanup(*args)
pvSetCleanup = _pv.pvSetCleanup

def pvGetEvent(*args):
  return _pv.pvGetEvent(*args)
pvGetEvent = _pv.pvGetEvent

def pvPollEvent(*args):
  return _pv.pvPollEvent(*args)
pvPollEvent = _pv.pvPollEvent

def pvWait(*args):
  return _pv.pvWait(*args)
pvWait = _pv.pvWait

def pvGlUpdate(*args):
  return _pv.pvGlUpdate(*args)
pvGlUpdate = _pv.pvGlUpdate

def pvSleep(*args):
  return _pv.pvSleep(*args)
pvSleep = _pv.pvSleep

def pvWarning(*args):
  return _pv.pvWarning(*args)
pvWarning = _pv.pvWarning

def pvMainFatal(*args):
  return _pv.pvMainFatal(*args)
pvMainFatal = _pv.pvMainFatal

def pvThreadFatal(*args):
  return _pv.pvThreadFatal(*args)
pvThreadFatal = _pv.pvThreadFatal

def pvScreenHint(*args):
  return _pv.pvScreenHint(*args)
pvScreenHint = _pv.pvScreenHint

def pvSetMouseShape(*args):
  return _pv.pvSetMouseShape(*args)
pvSetMouseShape = _pv.pvSetMouseShape

def pvSetWhatsThis(*args):
  return _pv.pvSetWhatsThis(*args)
pvSetWhatsThis = _pv.pvSetWhatsThis

def pvWhatsThisPrintf(*args):
  return _pv.pvWhatsThisPrintf(*args)
pvWhatsThisPrintf = _pv.pvWhatsThisPrintf

def pvClientCommand(*args):
  return _pv.pvClientCommand(*args)
pvClientCommand = _pv.pvClientCommand

def pvWriteTextToFileAtClient(*args):
  return _pv.pvWriteTextToFileAtClient(*args)
pvWriteTextToFileAtClient = _pv.pvWriteTextToFileAtClient

def pvZoomMask(*args):
  return _pv.pvZoomMask(*args)
pvZoomMask = _pv.pvZoomMask

def pvSetManualUrl(*args):
  return _pv.pvSetManualUrl(*args)
pvSetManualUrl = _pv.pvSetManualUrl

def pvSelectLanguage(*args):
  return _pv.pvSelectLanguage(*args)
pvSelectLanguage = _pv.pvSelectLanguage

def pvStartDefinition(*args):
  return _pv.pvStartDefinition(*args)
pvStartDefinition = _pv.pvStartDefinition

def pvQWidget(*args):
  return _pv.pvQWidget(*args)
pvQWidget = _pv.pvQWidget

def pvQLayoutVbox(*args):
  return _pv.pvQLayoutVbox(*args)
pvQLayoutVbox = _pv.pvQLayoutVbox

def pvQLayoutHbox(*args):
  return _pv.pvQLayoutHbox(*args)
pvQLayoutHbox = _pv.pvQLayoutHbox

def pvQLayoutGrid(*args):
  return _pv.pvQLayoutGrid(*args)
pvQLayoutGrid = _pv.pvQLayoutGrid

def pvQLabel(*args):
  return _pv.pvQLabel(*args)
pvQLabel = _pv.pvQLabel

def pvQComboBox(*args):
  return _pv.pvQComboBox(*args)
pvQComboBox = _pv.pvQComboBox

def pvQLineEdit(*args):
  return _pv.pvQLineEdit(*args)
pvQLineEdit = _pv.pvQLineEdit

def pvQPushButton(*args):
  return _pv.pvQPushButton(*args)
pvQPushButton = _pv.pvQPushButton

def pvQLCDNumber(*args):
  return _pv.pvQLCDNumber(*args)
pvQLCDNumber = _pv.pvQLCDNumber

def pvQSlider(*args):
  return _pv.pvQSlider(*args)
pvQSlider = _pv.pvQSlider

def pvQButtonGroup(*args):
  return _pv.pvQButtonGroup(*args)
pvQButtonGroup = _pv.pvQButtonGroup

def pvQRadioButton(*args):
  return _pv.pvQRadioButton(*args)
pvQRadioButton = _pv.pvQRadioButton

def pvQCheckBox(*args):
  return _pv.pvQCheckBox(*args)
pvQCheckBox = _pv.pvQCheckBox

def pvQFrame(*args):
  return _pv.pvQFrame(*args)
pvQFrame = _pv.pvQFrame

def pvQDraw(*args):
  return _pv.pvQDraw(*args)
pvQDraw = _pv.pvQDraw

def pvQImage(*args):
  return _pv.pvQImage(*args)
pvQImage = _pv.pvQImage

def pvQGL(*args):
  return _pv.pvQGL(*args)
pvQGL = _pv.pvQGL

def pvQTabWidget(*args):
  return _pv.pvQTabWidget(*args)
pvQTabWidget = _pv.pvQTabWidget

def pvQToolBox(*args):
  return _pv.pvQToolBox(*args)
pvQToolBox = _pv.pvQToolBox

def pvQGroupBox(*args):
  return _pv.pvQGroupBox(*args)
pvQGroupBox = _pv.pvQGroupBox

def pvQListBox(*args):
  return _pv.pvQListBox(*args)
pvQListBox = _pv.pvQListBox

def pvQTable(*args):
  return _pv.pvQTable(*args)
pvQTable = _pv.pvQTable

def pvQSpinBox(*args):
  return _pv.pvQSpinBox(*args)
pvQSpinBox = _pv.pvQSpinBox

def pvQDial(*args):
  return _pv.pvQDial(*args)
pvQDial = _pv.pvQDial

def pvQProgressBar(*args):
  return _pv.pvQProgressBar(*args)
pvQProgressBar = _pv.pvQProgressBar

def pvQMultiLineEdit(*args):
  return _pv.pvQMultiLineEdit(*args)
pvQMultiLineEdit = _pv.pvQMultiLineEdit

def pvQTextBrowser(*args):
  return _pv.pvQTextBrowser(*args)
pvQTextBrowser = _pv.pvQTextBrowser

def pvQListView(*args):
  return _pv.pvQListView(*args)
pvQListView = _pv.pvQListView

def pvQIconView(*args):
  return _pv.pvQIconView(*args)
pvQIconView = _pv.pvQIconView

def pvQVtkTclWidget(*args):
  return _pv.pvQVtkTclWidget(*args)
pvQVtkTclWidget = _pv.pvQVtkTclWidget

def pvQwtPlotWidget(*args):
  return _pv.pvQwtPlotWidget(*args)
pvQwtPlotWidget = _pv.pvQwtPlotWidget

def pvQwtScale(*args):
  return _pv.pvQwtScale(*args)
pvQwtScale = _pv.pvQwtScale

def pvQwtThermo(*args):
  return _pv.pvQwtThermo(*args)
pvQwtThermo = _pv.pvQwtThermo

def pvQwtKnob(*args):
  return _pv.pvQwtKnob(*args)
pvQwtKnob = _pv.pvQwtKnob

def pvQwtCounter(*args):
  return _pv.pvQwtCounter(*args)
pvQwtCounter = _pv.pvQwtCounter

def pvQwtWheel(*args):
  return _pv.pvQwtWheel(*args)
pvQwtWheel = _pv.pvQwtWheel

def pvQwtSlider(*args):
  return _pv.pvQwtSlider(*args)
pvQwtSlider = _pv.pvQwtSlider

def pvQwtDial(*args):
  return _pv.pvQwtDial(*args)
pvQwtDial = _pv.pvQwtDial

def pvQwtCompass(*args):
  return _pv.pvQwtCompass(*args)
pvQwtCompass = _pv.pvQwtCompass

def pvQwtAnalogClock(*args):
  return _pv.pvQwtAnalogClock(*args)
pvQwtAnalogClock = _pv.pvQwtAnalogClock

def pvQDateEdit(*args):
  return _pv.pvQDateEdit(*args)
pvQDateEdit = _pv.pvQDateEdit

def pvQTimeEdit(*args):
  return _pv.pvQTimeEdit(*args)
pvQTimeEdit = _pv.pvQTimeEdit

def pvQDateTimeEdit(*args):
  return _pv.pvQDateTimeEdit(*args)
pvQDateTimeEdit = _pv.pvQDateTimeEdit

def pvQCustomWidget(*args):
  return _pv.pvQCustomWidget(*args)
pvQCustomWidget = _pv.pvQCustomWidget

def pvEndDefinition(*args):
  return _pv.pvEndDefinition(*args)
pvEndDefinition = _pv.pvEndDefinition

def pvAddWidgetOrLayout(*args):
  return _pv.pvAddWidgetOrLayout(*args)
pvAddWidgetOrLayout = _pv.pvAddWidgetOrLayout

def pvAddStretch(*args):
  return _pv.pvAddStretch(*args)
pvAddStretch = _pv.pvAddStretch

def pvTabOrder(*args):
  return _pv.pvTabOrder(*args)
pvTabOrder = _pv.pvTabOrder

def pvDeleteWidget(*args):
  return _pv.pvDeleteWidget(*args)
pvDeleteWidget = _pv.pvDeleteWidget

def pvSetCaption(*args):
  return _pv.pvSetCaption(*args)
pvSetCaption = _pv.pvSetCaption

def pvPlaySound(*args):
  return _pv.pvPlaySound(*args)
pvPlaySound = _pv.pvPlaySound

def pvBeep(*args):
  return _pv.pvBeep(*args)
pvBeep = _pv.pvBeep

def pvStatusMessage(*args):
  return _pv.pvStatusMessage(*args)
pvStatusMessage = _pv.pvStatusMessage

def pvToolTip(*args):
  return _pv.pvToolTip(*args)
pvToolTip = _pv.pvToolTip

def pvSetTextEx(*args):
  return _pv.pvSetTextEx(*args)
pvSetTextEx = _pv.pvSetTextEx

def pvSetText(*args):
  return _pv.pvSetText(*args)
pvSetText = _pv.pvSetText

def pvPrintf(*args):
  return _pv.pvPrintf(*args)
pvPrintf = _pv.pvPrintf

def pvSetStyleSheet(*args):
  return _pv.pvSetStyleSheet(*args)
pvSetStyleSheet = _pv.pvSetStyleSheet

def pvPrintfStyleSheet(*args):
  return _pv.pvPrintfStyleSheet(*args)
pvPrintfStyleSheet = _pv.pvPrintfStyleSheet

def pvSetMinValue(*args):
  return _pv.pvSetMinValue(*args)
pvSetMinValue = _pv.pvSetMinValue

def pvSetMaxValue(*args):
  return _pv.pvSetMaxValue(*args)
pvSetMaxValue = _pv.pvSetMaxValue

def pvSetValue(*args):
  return _pv.pvSetValue(*args)
pvSetValue = _pv.pvSetValue

def pvClear(*args):
  return _pv.pvClear(*args)
pvClear = _pv.pvClear

def pvChangeItem(*args):
  return _pv.pvChangeItem(*args)
pvChangeItem = _pv.pvChangeItem

def pvInsertItem(*args):
  return _pv.pvInsertItem(*args)
pvInsertItem = _pv.pvInsertItem

def pvRemoveItem(*args):
  return _pv.pvRemoveItem(*args)
pvRemoveItem = _pv.pvRemoveItem

def pvRemoveItemByName(*args):
  return _pv.pvRemoveItemByName(*args)
pvRemoveItemByName = _pv.pvRemoveItemByName

def pvAddColumn(*args):
  return _pv.pvAddColumn(*args)
pvAddColumn = _pv.pvAddColumn

def pvRemoveAllColumns(*args):
  return _pv.pvRemoveAllColumns(*args)
pvRemoveAllColumns = _pv.pvRemoveAllColumns

def pvSetTableText(*args):
  return _pv.pvSetTableText(*args)
pvSetTableText = _pv.pvSetTableText

def pvSetTableButton(*args):
  return _pv.pvSetTableButton(*args)
pvSetTableButton = _pv.pvSetTableButton

def pvSetTableCheckBox(*args):
  return _pv.pvSetTableCheckBox(*args)
pvSetTableCheckBox = _pv.pvSetTableCheckBox

def pvSetTableComboBox(*args):
  return _pv.pvSetTableComboBox(*args)
pvSetTableComboBox = _pv.pvSetTableComboBox

def pvSetTableLabel(*args):
  return _pv.pvSetTableLabel(*args)
pvSetTableLabel = _pv.pvSetTableLabel

def pvTablePrintf(*args):
  return _pv.pvTablePrintf(*args)
pvTablePrintf = _pv.pvTablePrintf

def pvSetTableTextAlignment(*args):
  return _pv.pvSetTableTextAlignment(*args)
pvSetTableTextAlignment = _pv.pvSetTableTextAlignment

def pvMysqldump(*args):
  return _pv.pvMysqldump(*args)
pvMysqldump = _pv.pvMysqldump

def pvCSVdump(*args):
  return _pv.pvCSVdump(*args)
pvCSVdump = _pv.pvCSVdump

def pvCSVcreate(*args):
  return _pv.pvCSVcreate(*args)
pvCSVcreate = _pv.pvCSVcreate

def pvCSV(*args):
  return _pv.pvCSV(*args)
pvCSV = _pv.pvCSV

def pvSetListViewText(*args):
  return _pv.pvSetListViewText(*args)
pvSetListViewText = _pv.pvSetListViewText

def pvListViewPrintf(*args):
  return _pv.pvListViewPrintf(*args)
pvListViewPrintf = _pv.pvListViewPrintf

def pvListViewSetSelected(*args):
  return _pv.pvListViewSetSelected(*args)
pvListViewSetSelected = _pv.pvListViewSetSelected

def pvListBoxSetSelected(*args):
  return _pv.pvListBoxSetSelected(*args)
pvListBoxSetSelected = _pv.pvListBoxSetSelected

def pvSetColumnWidth(*args):
  return _pv.pvSetColumnWidth(*args)
pvSetColumnWidth = _pv.pvSetColumnWidth

def pvSetRowHeight(*args):
  return _pv.pvSetRowHeight(*args)
pvSetRowHeight = _pv.pvSetRowHeight

def pvSetWordWrap(*args):
  return _pv.pvSetWordWrap(*args)
pvSetWordWrap = _pv.pvSetWordWrap

def pvSetPixmap(*args):
  return _pv.pvSetPixmap(*args)
pvSetPixmap = _pv.pvSetPixmap

def pvSetTablePixmap(*args):
  return _pv.pvSetTablePixmap(*args)
pvSetTablePixmap = _pv.pvSetTablePixmap

def pvSetSource(*args):
  return _pv.pvSetSource(*args)
pvSetSource = _pv.pvSetSource

def pvSetImage(*args):
  return _pv.pvSetImage(*args)
pvSetImage = _pv.pvSetImage

def pvSetBufferedJpgImage(*args):
  return _pv.pvSetBufferedJpgImage(*args)
pvSetBufferedJpgImage = _pv.pvSetBufferedJpgImage

def pvSetBufferTransparency(*args):
  return _pv.pvSetBufferTransparency(*args)
pvSetBufferTransparency = _pv.pvSetBufferTransparency

def pvSetBackgroundColor(*args):
  return _pv.pvSetBackgroundColor(*args)
pvSetBackgroundColor = _pv.pvSetBackgroundColor

def pvSetPaletteBackgroundColor(*args):
  return _pv.pvSetPaletteBackgroundColor(*args)
pvSetPaletteBackgroundColor = _pv.pvSetPaletteBackgroundColor

def pvSetPaletteForegroundColor(*args):
  return _pv.pvSetPaletteForegroundColor(*args)
pvSetPaletteForegroundColor = _pv.pvSetPaletteForegroundColor

def pvSetFontColor(*args):
  return _pv.pvSetFontColor(*args)
pvSetFontColor = _pv.pvSetFontColor

def pvSetFont(*args):
  return _pv.pvSetFont(*args)
pvSetFont = _pv.pvSetFont

def pvDisplayNum(*args):
  return _pv.pvDisplayNum(*args)
pvDisplayNum = _pv.pvDisplayNum

def pvDisplayFloat(*args):
  return _pv.pvDisplayFloat(*args)
pvDisplayFloat = _pv.pvDisplayFloat

def pvDisplayStr(*args):
  return _pv.pvDisplayStr(*args)
pvDisplayStr = _pv.pvDisplayStr

def pvAddTab(*args):
  return _pv.pvAddTab(*args)
pvAddTab = _pv.pvAddTab

def pvSetListViewPixmap(*args):
  return _pv.pvSetListViewPixmap(*args)
pvSetListViewPixmap = _pv.pvSetListViewPixmap

def pvRemoveListViewItem(*args):
  return _pv.pvRemoveListViewItem(*args)
pvRemoveListViewItem = _pv.pvRemoveListViewItem

def pvRemoveIconViewItem(*args):
  return _pv.pvRemoveIconViewItem(*args)
pvRemoveIconViewItem = _pv.pvRemoveIconViewItem

def pvSetIconViewItem(*args):
  return _pv.pvSetIconViewItem(*args)
pvSetIconViewItem = _pv.pvSetIconViewItem

def pvSetDateOrder(*args):
  return _pv.pvSetDateOrder(*args)
pvSetDateOrder = _pv.pvSetDateOrder

def pvSetDate(*args):
  return _pv.pvSetDate(*args)
pvSetDate = _pv.pvSetDate

def pvSetMinDate(*args):
  return _pv.pvSetMinDate(*args)
pvSetMinDate = _pv.pvSetMinDate

def pvSetMaxDate(*args):
  return _pv.pvSetMaxDate(*args)
pvSetMaxDate = _pv.pvSetMaxDate

def pvSetTime(*args):
  return _pv.pvSetTime(*args)
pvSetTime = _pv.pvSetTime

def pvSetMinTime(*args):
  return _pv.pvSetMinTime(*args)
pvSetMinTime = _pv.pvSetMinTime

def pvSetMaxTime(*args):
  return _pv.pvSetMaxTime(*args)
pvSetMaxTime = _pv.pvSetMaxTime

def pvEnsureCellVisible(*args):
  return _pv.pvEnsureCellVisible(*args)
pvEnsureCellVisible = _pv.pvEnsureCellVisible

def pvMoveCursor(*args):
  return _pv.pvMoveCursor(*args)
pvMoveCursor = _pv.pvMoveCursor

def pvScrollToAnchor(*args):
  return _pv.pvScrollToAnchor(*args)
pvScrollToAnchor = _pv.pvScrollToAnchor

def pvSetZoomFactor(*args):
  return _pv.pvSetZoomFactor(*args)
pvSetZoomFactor = _pv.pvSetZoomFactor

def pvPrintHtmlOnPrinter(*args):
  return _pv.pvPrintHtmlOnPrinter(*args)
pvPrintHtmlOnPrinter = _pv.pvPrintHtmlOnPrinter

def pvSetWidgetProperty(*args):
  return _pv.pvSetWidgetProperty(*args)
pvSetWidgetProperty = _pv.pvSetWidgetProperty

def pvPassThroughOneJpegFrame(*args):
  return _pv.pvPassThroughOneJpegFrame(*args)
pvPassThroughOneJpegFrame = _pv.pvPassThroughOneJpegFrame

def pvSendJpegFrame(*args):
  return _pv.pvSendJpegFrame(*args)
pvSendJpegFrame = _pv.pvSendJpegFrame

def pvSendRGBA(*args):
  return _pv.pvSendRGBA(*args)
pvSendRGBA = _pv.pvSendRGBA

def pvSaveDrawBuffer(*args):
  return _pv.pvSaveDrawBuffer(*args)
pvSaveDrawBuffer = _pv.pvSaveDrawBuffer

def pvText(*args):
  return _pv.pvText(*args)
pvText = _pv.pvText

def pvRequestJpeg(*args):
  return _pv.pvRequestJpeg(*args)
pvRequestJpeg = _pv.pvRequestJpeg

def pvRequestGeometry(*args):
  return _pv.pvRequestGeometry(*args)
pvRequestGeometry = _pv.pvRequestGeometry

def pvRequestParentWidgetId(*args):
  return _pv.pvRequestParentWidgetId(*args)
pvRequestParentWidgetId = _pv.pvRequestParentWidgetId

def pvSelection(*args):
  return _pv.pvSelection(*args)
pvSelection = _pv.pvSelection

def pvRequestSvgBoundsOnElement(*args):
  return _pv.pvRequestSvgBoundsOnElement(*args)
pvRequestSvgBoundsOnElement = _pv.pvRequestSvgBoundsOnElement

def pvRequestSvgMatrixForElement(*args):
  return _pv.pvRequestSvgMatrixForElement(*args)
pvRequestSvgMatrixForElement = _pv.pvRequestSvgMatrixForElement

def pvMoveContent(*args):
  return _pv.pvMoveContent(*args)
pvMoveContent = _pv.pvMoveContent

def pvSetGeometry(*args):
  return _pv.pvSetGeometry(*args)
pvSetGeometry = _pv.pvSetGeometry

def pvSetMinSize(*args):
  return _pv.pvSetMinSize(*args)
pvSetMinSize = _pv.pvSetMinSize

def pvSetMaxSize(*args):
  return _pv.pvSetMaxSize(*args)
pvSetMaxSize = _pv.pvSetMaxSize

def pvSetAlignment(*args):
  return _pv.pvSetAlignment(*args)
pvSetAlignment = _pv.pvSetAlignment

def pvSetChecked(*args):
  return _pv.pvSetChecked(*args)
pvSetChecked = _pv.pvSetChecked

def pvMove(*args):
  return _pv.pvMove(*args)
pvMove = _pv.pvMove

def pvResize(*args):
  return _pv.pvResize(*args)
pvResize = _pv.pvResize

def pvHide(*args):
  return _pv.pvHide(*args)
pvHide = _pv.pvHide

def pvShow(*args):
  return _pv.pvShow(*args)
pvShow = _pv.pvShow

def pvSetParent(*args):
  return _pv.pvSetParent(*args)
pvSetParent = _pv.pvSetParent

def pvSetMultiSelection(*args):
  return _pv.pvSetMultiSelection(*args)
pvSetMultiSelection = _pv.pvSetMultiSelection

def pvSetEchoMode(*args):
  return _pv.pvSetEchoMode(*args)
pvSetEchoMode = _pv.pvSetEchoMode

def pvSetEditable(*args):
  return _pv.pvSetEditable(*args)
pvSetEditable = _pv.pvSetEditable

def pvSetEnabled(*args):
  return _pv.pvSetEnabled(*args)
pvSetEnabled = _pv.pvSetEnabled

def pvSetFocus(*args):
  return _pv.pvSetFocus(*args)
pvSetFocus = _pv.pvSetFocus

def pvTableSetEnabled(*args):
  return _pv.pvTableSetEnabled(*args)
pvTableSetEnabled = _pv.pvTableSetEnabled

def pvTableSetHeaderResizeEnabled(*args):
  return _pv.pvTableSetHeaderResizeEnabled(*args)
pvTableSetHeaderResizeEnabled = _pv.pvTableSetHeaderResizeEnabled

def pvSetSorting(*args):
  return _pv.pvSetSorting(*args)
pvSetSorting = _pv.pvSetSorting

def pvSetTabPosition(*args):
  return _pv.pvSetTabPosition(*args)
pvSetTabPosition = _pv.pvSetTabPosition

def pvEnableTabBar(*args):
  return _pv.pvEnableTabBar(*args)
pvEnableTabBar = _pv.pvEnableTabBar

def pvSetNumRows(*args):
  return _pv.pvSetNumRows(*args)
pvSetNumRows = _pv.pvSetNumRows

def pvSetNumCols(*args):
  return _pv.pvSetNumCols(*args)
pvSetNumCols = _pv.pvSetNumCols

def pvInsertRows(*args):
  return _pv.pvInsertRows(*args)
pvInsertRows = _pv.pvInsertRows

def pvInsertColumns(*args):
  return _pv.pvInsertColumns(*args)
pvInsertColumns = _pv.pvInsertColumns

def pvRemoveRow(*args):
  return _pv.pvRemoveRow(*args)
pvRemoveRow = _pv.pvRemoveRow

def pvRemoveColumn(*args):
  return _pv.pvRemoveColumn(*args)
pvRemoveColumn = _pv.pvRemoveColumn

def pvSetCurrentItem(*args):
  return _pv.pvSetCurrentItem(*args)
pvSetCurrentItem = _pv.pvSetCurrentItem

def pvSetTimeEditDisplay(*args):
  return _pv.pvSetTimeEditDisplay(*args)
pvSetTimeEditDisplay = _pv.pvSetTimeEditDisplay

def pvListViewEnsureVisible(*args):
  return _pv.pvListViewEnsureVisible(*args)
pvListViewEnsureVisible = _pv.pvListViewEnsureVisible

def pvListViewSetOpen(*args):
  return _pv.pvListViewSetOpen(*args)
pvListViewSetOpen = _pv.pvListViewSetOpen

def pvListViewSetHidden(*args):
  return _pv.pvListViewSetHidden(*args)
pvListViewSetHidden = _pv.pvListViewSetHidden

def pvListViewSetStandardPopupMenu(*args):
  return _pv.pvListViewSetStandardPopupMenu(*args)
pvListViewSetStandardPopupMenu = _pv.pvListViewSetStandardPopupMenu

def pvSetStyle(*args):
  return _pv.pvSetStyle(*args)
pvSetStyle = _pv.pvSetStyle

def pvSetMovie(*args):
  return _pv.pvSetMovie(*args)
pvSetMovie = _pv.pvSetMovie

def pvMovieControl(*args):
  return _pv.pvMovieControl(*args)
pvMovieControl = _pv.pvMovieControl

def pvMovieSpeed(*args):
  return _pv.pvMovieSpeed(*args)
pvMovieSpeed = _pv.pvMovieSpeed

def pvAddTabIcon(*args):
  return _pv.pvAddTabIcon(*args)
pvAddTabIcon = _pv.pvAddTabIcon

def pvSetCellWidget(*args):
  return _pv.pvSetCellWidget(*args)
pvSetCellWidget = _pv.pvSetCellWidget

def pvSetContentsMargins(*args):
  return _pv.pvSetContentsMargins(*args)
pvSetContentsMargins = _pv.pvSetContentsMargins

def pvSetSpacing(*args):
  return _pv.pvSetSpacing(*args)
pvSetSpacing = _pv.pvSetSpacing

def pvVtkTcl(*args):
  return _pv.pvVtkTcl(*args)
pvVtkTcl = _pv.pvVtkTcl

def pvVtkTclPrintf(*args):
  return _pv.pvVtkTclPrintf(*args)
pvVtkTclPrintf = _pv.pvVtkTclPrintf

def pvVtkTclScript(*args):
  return _pv.pvVtkTclScript(*args)
pvVtkTclScript = _pv.pvVtkTclScript

def pvHyperlink(*args):
  return _pv.pvHyperlink(*args)
pvHyperlink = _pv.pvHyperlink

def pvSendUserEvent(*args):
  return _pv.pvSendUserEvent(*args)
pvSendUserEvent = _pv.pvSendUserEvent

def pvWriteFile(*args):
  return _pv.pvWriteFile(*args)
pvWriteFile = _pv.pvWriteFile

def pvCloseFile(*args):
  return _pv.pvCloseFile(*args)
pvCloseFile = _pv.pvCloseFile

def pvGetTextParam(*args):
  return _pv.pvGetTextParam(*args)
pvGetTextParam = _pv.pvGetTextParam

def pvGetText(*args):
  return _pv.pvGetText(*args)
pvGetText = _pv.pvGetText

def pvParseEventStruct(*args):
  return _pv.pvParseEventStruct(*args)
pvParseEventStruct = _pv.pvParseEventStruct

def pvParseEvent(*args):
  return _pv.pvParseEvent(*args)
pvParseEvent = _pv.pvParseEvent

def pvCopyToClipboard(*args):
  return _pv.pvCopyToClipboard(*args)
pvCopyToClipboard = _pv.pvCopyToClipboard

def pvPrint(*args):
  return _pv.pvPrint(*args)
pvPrint = _pv.pvPrint

def pvSave(*args):
  return _pv.pvSave(*args)
pvSave = _pv.pvSave

def pvSaveAsBmp(*args):
  return _pv.pvSaveAsBmp(*args)
pvSaveAsBmp = _pv.pvSaveAsBmp

def pvHtmlOrSvgDump(*args):
  return _pv.pvHtmlOrSvgDump(*args)
pvHtmlOrSvgDump = _pv.pvHtmlOrSvgDump

def pvRenderTreeDump(*args):
  return _pv.pvRenderTreeDump(*args)
pvRenderTreeDump = _pv.pvRenderTreeDump

def pvSendFile(*args):
  return _pv.pvSendFile(*args)
pvSendFile = _pv.pvSendFile

def pvDownloadFileAs(*args):
  return _pv.pvDownloadFileAs(*args)
pvDownloadFileAs = _pv.pvDownloadFileAs

def pvDownloadFile(*args):
  return _pv.pvDownloadFile(*args)
pvDownloadFile = _pv.pvDownloadFile

def pvSendHttpChunks(*args):
  return _pv.pvSendHttpChunks(*args)
pvSendHttpChunks = _pv.pvSendHttpChunks

def pvSendHttpContentLength(*args):
  return _pv.pvSendHttpContentLength(*args)
pvSendHttpContentLength = _pv.pvSendHttpContentLength

def pvSetMaxClientsPerIpAdr(*args):
  return _pv.pvSetMaxClientsPerIpAdr(*args)
pvSetMaxClientsPerIpAdr = _pv.pvSetMaxClientsPerIpAdr

def pvMaxClientsPerIpAdr():
  return _pv.pvMaxClientsPerIpAdr()
pvMaxClientsPerIpAdr = _pv.pvMaxClientsPerIpAdr

def pvSetMaxClients(*args):
  return _pv.pvSetMaxClients(*args)
pvSetMaxClients = _pv.pvSetMaxClients

def pvMaxClients():
  return _pv.pvMaxClients()
pvMaxClients = _pv.pvMaxClients

def pvGetAdrTableItem():
  return _pv.pvGetAdrTableItem()
pvGetAdrTableItem = _pv.pvGetAdrTableItem

def pvClearMessageQueue(*args):
  return _pv.pvClearMessageQueue(*args)
pvClearMessageQueue = _pv.pvClearMessageQueue

def pvtcpsend(*args):
  return _pv.pvtcpsend(*args)
pvtcpsend = _pv.pvtcpsend

def pvtcpsendstring(*args):
  return _pv.pvtcpsendstring(*args)
pvtcpsendstring = _pv.pvtcpsendstring

def pvtcpsend_binary(*args):
  return _pv.pvtcpsend_binary(*args)
pvtcpsend_binary = _pv.pvtcpsend_binary

def pvtcpreceive(*args):
  return _pv.pvtcpreceive(*args)
pvtcpreceive = _pv.pvtcpreceive

def pvtcpreceive_binary(*args):
  return _pv.pvtcpreceive_binary(*args)
pvtcpreceive_binary = _pv.pvtcpreceive_binary

def pvGlBegin(*args):
  return _pv.pvGlBegin(*args)
pvGlBegin = _pv.pvGlBegin
class glFont(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, glFont, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, glFont, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pv.new_glFont()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_glFont
    __del__ = lambda self : None;
    def read(self, *args): return _pv.glFont_read(self, *args)
    def lineHeight(self): return _pv.glFont_lineHeight(self)
    def charWidth(self, *args): return _pv.glFont_charWidth(self, *args)
    def stringWidth(self, *args): return _pv.glFont_stringWidth(self, *args)
    def drawString(self, *args): return _pv.glFont_drawString(self, *args)
    def setZoom(self, *args): return _pv.glFont_setZoom(self, *args)
    def setRotation(self, *args): return _pv.glFont_setRotation(self, *args)
    def setFontSize(self, *args): return _pv.glFont_setFontSize(self, *args)
glFont_swigregister = _pv.glFont_swigregister
glFont_swigregister(glFont)


def pvSendOpenGL(*args):
  return _pv.pvSendOpenGL(*args)
pvSendOpenGL = _pv.pvSendOpenGL

def pvGlEnd(*args):
  return _pv.pvGlEnd(*args)
pvGlEnd = _pv.pvGlEnd

def pvFileDialog(*args):
  return _pv.pvFileDialog(*args)
pvFileDialog = _pv.pvFileDialog

def pvPopupMenu(*args):
  return _pv.pvPopupMenu(*args)
pvPopupMenu = _pv.pvPopupMenu

def pvMessageBox(*args):
  return _pv.pvMessageBox(*args)
pvMessageBox = _pv.pvMessageBox

def pvInputDialog(*args):
  return _pv.pvInputDialog(*args)
pvInputDialog = _pv.pvInputDialog

def pvRunModalDialog(*args):
  return _pv.pvRunModalDialog(*args)
pvRunModalDialog = _pv.pvRunModalDialog

def pvRunModalDialogScript(*args):
  return _pv.pvRunModalDialogScript(*args)
pvRunModalDialogScript = _pv.pvRunModalDialogScript

def pvTerminateModalDialog(*args):
  return _pv.pvTerminateModalDialog(*args)
pvTerminateModalDialog = _pv.pvTerminateModalDialog

def pvUpdateBaseWindow(*args):
  return _pv.pvUpdateBaseWindow(*args)
pvUpdateBaseWindow = _pv.pvUpdateBaseWindow

def pvUpdateBaseWindowOnOff(*args):
  return _pv.pvUpdateBaseWindowOnOff(*args)
pvUpdateBaseWindowOnOff = _pv.pvUpdateBaseWindowOnOff

def pvAddDockWidget(*args):
  return _pv.pvAddDockWidget(*args)
pvAddDockWidget = _pv.pvAddDockWidget

def pvDeleteDockWidget(*args):
  return _pv.pvDeleteDockWidget(*args)
pvDeleteDockWidget = _pv.pvDeleteDockWidget

def qpwSetCurveData(*args):
  return _pv.qpwSetCurveData(*args)
qpwSetCurveData = _pv.qpwSetCurveData

def qpwSetBufferedCurveData(*args):
  return _pv.qpwSetBufferedCurveData(*args)
qpwSetBufferedCurveData = _pv.qpwSetBufferedCurveData

def qpwReplot(*args):
  return _pv.qpwReplot(*args)
qpwReplot = _pv.qpwReplot

def qpwSetTitle(*args):
  return _pv.qpwSetTitle(*args)
qpwSetTitle = _pv.qpwSetTitle

def qpwSetCanvasBackground(*args):
  return _pv.qpwSetCanvasBackground(*args)
qpwSetCanvasBackground = _pv.qpwSetCanvasBackground

def qpwEnableOutline(*args):
  return _pv.qpwEnableOutline(*args)
qpwEnableOutline = _pv.qpwEnableOutline

def qpwSetOutlinePen(*args):
  return _pv.qpwSetOutlinePen(*args)
qpwSetOutlinePen = _pv.qpwSetOutlinePen

def qpwSetAutoLegend(*args):
  return _pv.qpwSetAutoLegend(*args)
qpwSetAutoLegend = _pv.qpwSetAutoLegend

def qpwEnableLegend(*args):
  return _pv.qpwEnableLegend(*args)
qpwEnableLegend = _pv.qpwEnableLegend

def qpwSetLegendPos(*args):
  return _pv.qpwSetLegendPos(*args)
qpwSetLegendPos = _pv.qpwSetLegendPos

def qpwSetLegendFrameStyle(*args):
  return _pv.qpwSetLegendFrameStyle(*args)
qpwSetLegendFrameStyle = _pv.qpwSetLegendFrameStyle

def qpwEnableGridXMin(*args):
  return _pv.qpwEnableGridXMin(*args)
qpwEnableGridXMin = _pv.qpwEnableGridXMin

def qpwSetGridMajPen(*args):
  return _pv.qpwSetGridMajPen(*args)
qpwSetGridMajPen = _pv.qpwSetGridMajPen

def qpwSetGridMinPen(*args):
  return _pv.qpwSetGridMinPen(*args)
qpwSetGridMinPen = _pv.qpwSetGridMinPen

def qpwEnableAxis(*args):
  return _pv.qpwEnableAxis(*args)
qpwEnableAxis = _pv.qpwEnableAxis

def qpwSetAxisTitle(*args):
  return _pv.qpwSetAxisTitle(*args)
qpwSetAxisTitle = _pv.qpwSetAxisTitle

def qpwSetAxisOptions(*args):
  return _pv.qpwSetAxisOptions(*args)
qpwSetAxisOptions = _pv.qpwSetAxisOptions

def qpwSetAxisMaxMajor(*args):
  return _pv.qpwSetAxisMaxMajor(*args)
qpwSetAxisMaxMajor = _pv.qpwSetAxisMaxMajor

def qpwSetAxisMaxMinor(*args):
  return _pv.qpwSetAxisMaxMinor(*args)
qpwSetAxisMaxMinor = _pv.qpwSetAxisMaxMinor

def qpwInsertCurve(*args):
  return _pv.qpwInsertCurve(*args)
qpwInsertCurve = _pv.qpwInsertCurve

def qpwRemoveCurve(*args):
  return _pv.qpwRemoveCurve(*args)
qpwRemoveCurve = _pv.qpwRemoveCurve

def qpwSetCurvePen(*args):
  return _pv.qpwSetCurvePen(*args)
qpwSetCurvePen = _pv.qpwSetCurvePen

def qpwSetCurveSymbol(*args):
  return _pv.qpwSetCurveSymbol(*args)
qpwSetCurveSymbol = _pv.qpwSetCurveSymbol

def qpwSetCurveYAxis(*args):
  return _pv.qpwSetCurveYAxis(*args)
qpwSetCurveYAxis = _pv.qpwSetCurveYAxis

def qpwInsertMarker(*args):
  return _pv.qpwInsertMarker(*args)
qpwInsertMarker = _pv.qpwInsertMarker

def qpwSetMarkerLineStyle(*args):
  return _pv.qpwSetMarkerLineStyle(*args)
qpwSetMarkerLineStyle = _pv.qpwSetMarkerLineStyle

def qpwSetMarkerPos(*args):
  return _pv.qpwSetMarkerPos(*args)
qpwSetMarkerPos = _pv.qpwSetMarkerPos

def qpwSetMarkerLabelAlign(*args):
  return _pv.qpwSetMarkerLabelAlign(*args)
qpwSetMarkerLabelAlign = _pv.qpwSetMarkerLabelAlign

def qpwSetMarkerPen(*args):
  return _pv.qpwSetMarkerPen(*args)
qpwSetMarkerPen = _pv.qpwSetMarkerPen

def qpwSetMarkerLabel(*args):
  return _pv.qpwSetMarkerLabel(*args)
qpwSetMarkerLabel = _pv.qpwSetMarkerLabel

def qpwSetMarkerFont(*args):
  return _pv.qpwSetMarkerFont(*args)
qpwSetMarkerFont = _pv.qpwSetMarkerFont

def qpwSetMarkerSymbol(*args):
  return _pv.qpwSetMarkerSymbol(*args)
qpwSetMarkerSymbol = _pv.qpwSetMarkerSymbol

def qpwInsertLineMarker(*args):
  return _pv.qpwInsertLineMarker(*args)
qpwInsertLineMarker = _pv.qpwInsertLineMarker

def qpwSetAxisScaleDraw(*args):
  return _pv.qpwSetAxisScaleDraw(*args)
qpwSetAxisScaleDraw = _pv.qpwSetAxisScaleDraw

def qpwSetAxisScale(*args):
  return _pv.qpwSetAxisScale(*args)
qpwSetAxisScale = _pv.qpwSetAxisScale

def pvSetZoomX(*args):
  return _pv.pvSetZoomX(*args)
pvSetZoomX = _pv.pvSetZoomX

def pvSetZoomY(*args):
  return _pv.pvSetZoomY(*args)
pvSetZoomY = _pv.pvSetZoomY

def gWriteFile(*args):
  return _pv.gWriteFile(*args)
gWriteFile = _pv.gWriteFile

def gCloseFile():
  return _pv.gCloseFile()
gCloseFile = _pv.gCloseFile

def gBeginDraw(*args):
  return _pv.gBeginDraw(*args)
gBeginDraw = _pv.gBeginDraw

def gBox(*args):
  return _pv.gBox(*args)
gBox = _pv.gBox

def gRect(*args):
  return _pv.gRect(*args)
gRect = _pv.gRect

def gEndDraw(*args):
  return _pv.gEndDraw(*args)
gEndDraw = _pv.gEndDraw

def gLineTo(*args):
  return _pv.gLineTo(*args)
gLineTo = _pv.gLineTo

def gBufferedLine(*args):
  return _pv.gBufferedLine(*args)
gBufferedLine = _pv.gBufferedLine

def gLine(*args):
  return _pv.gLine(*args)
gLine = _pv.gLine

def gMoveTo(*args):
  return _pv.gMoveTo(*args)
gMoveTo = _pv.gMoveTo

def gRightYAxis(*args):
  return _pv.gRightYAxis(*args)
gRightYAxis = _pv.gRightYAxis

def gSetColor(*args):
  return _pv.gSetColor(*args)
gSetColor = _pv.gSetColor

def gSetWidth(*args):
  return _pv.gSetWidth(*args)
gSetWidth = _pv.gSetWidth

def gSetStyle(*args):
  return _pv.gSetStyle(*args)
gSetStyle = _pv.gSetStyle

def gDrawArc(*args):
  return _pv.gDrawArc(*args)
gDrawArc = _pv.gDrawArc

def gDrawPie(*args):
  return _pv.gDrawPie(*args)
gDrawPie = _pv.gDrawPie

def gDrawPolygon(*args):
  return _pv.gDrawPolygon(*args)
gDrawPolygon = _pv.gDrawPolygon

def gSetFont(*args):
  return _pv.gSetFont(*args)
gSetFont = _pv.gSetFont

def gSetLinestyle(*args):
  return _pv.gSetLinestyle(*args)
gSetLinestyle = _pv.gSetLinestyle

def gText(*args):
  return _pv.gText(*args)
gText = _pv.gText

def gTextInAxis(*args):
  return _pv.gTextInAxis(*args)
gTextInAxis = _pv.gTextInAxis

def gSetFloatFormat(*args):
  return _pv.gSetFloatFormat(*args)
gSetFloatFormat = _pv.gSetFloatFormat

def gXAxis(*args):
  return _pv.gXAxis(*args)
gXAxis = _pv.gXAxis

def gYAxis(*args):
  return _pv.gYAxis(*args)
gYAxis = _pv.gYAxis

def gXGrid(*args):
  return _pv.gXGrid(*args)
gXGrid = _pv.gXGrid

def gYGrid(*args):
  return _pv.gYGrid(*args)
gYGrid = _pv.gYGrid

def gBoxWithText(*args):
  return _pv.gBoxWithText(*args)
gBoxWithText = _pv.gBoxWithText

def gComment(*args):
  return _pv.gComment(*args)
gComment = _pv.gComment

def gPlaySVG(*args):
  return _pv.gPlaySVG(*args)
gPlaySVG = _pv.gPlaySVG

def gSocketPlaySVG(*args):
  return _pv.gSocketPlaySVG(*args)
gSocketPlaySVG = _pv.gSocketPlaySVG

def gTranslate(*args):
  return _pv.gTranslate(*args)
gTranslate = _pv.gTranslate

def gRotate(*args):
  return _pv.gRotate(*args)
gRotate = _pv.gRotate

def gScale(*args):
  return _pv.gScale(*args)
gScale = _pv.gScale

def pvSetSelector(*args):
  return _pv.pvSetSelector(*args)
pvSetSelector = _pv.pvSetSelector

def pvPrintSvgOnPrinter(*args):
  return _pv.pvPrintSvgOnPrinter(*args)
pvPrintSvgOnPrinter = _pv.pvPrintSvgOnPrinter

def qwtScaleSetTitle(*args):
  return _pv.qwtScaleSetTitle(*args)
qwtScaleSetTitle = _pv.qwtScaleSetTitle

def qwtScaleSetTitleColor(*args):
  return _pv.qwtScaleSetTitleColor(*args)
qwtScaleSetTitleColor = _pv.qwtScaleSetTitleColor

def qwtScaleSetTitleFont(*args):
  return _pv.qwtScaleSetTitleFont(*args)
qwtScaleSetTitleFont = _pv.qwtScaleSetTitleFont

def qwtScaleSetTitleAlignment(*args):
  return _pv.qwtScaleSetTitleAlignment(*args)
qwtScaleSetTitleAlignment = _pv.qwtScaleSetTitleAlignment

def qwtScaleSetBorderDist(*args):
  return _pv.qwtScaleSetBorderDist(*args)
qwtScaleSetBorderDist = _pv.qwtScaleSetBorderDist

def qwtScaleSetBaselineDist(*args):
  return _pv.qwtScaleSetBaselineDist(*args)
qwtScaleSetBaselineDist = _pv.qwtScaleSetBaselineDist

def qwtScaleSetScaleDiv(*args):
  return _pv.qwtScaleSetScaleDiv(*args)
qwtScaleSetScaleDiv = _pv.qwtScaleSetScaleDiv

def qwtScaleSetLabelFormat(*args):
  return _pv.qwtScaleSetLabelFormat(*args)
qwtScaleSetLabelFormat = _pv.qwtScaleSetLabelFormat

def qwtScaleSetLabelAlignment(*args):
  return _pv.qwtScaleSetLabelAlignment(*args)
qwtScaleSetLabelAlignment = _pv.qwtScaleSetLabelAlignment

def qwtScaleSetLabelRotation(*args):
  return _pv.qwtScaleSetLabelRotation(*args)
qwtScaleSetLabelRotation = _pv.qwtScaleSetLabelRotation

def qwtScaleSetPosition(*args):
  return _pv.qwtScaleSetPosition(*args)
qwtScaleSetPosition = _pv.qwtScaleSetPosition

def qwtThermoSetScale(*args):
  return _pv.qwtThermoSetScale(*args)
qwtThermoSetScale = _pv.qwtThermoSetScale

def qwtThermoSetOrientation(*args):
  return _pv.qwtThermoSetOrientation(*args)
qwtThermoSetOrientation = _pv.qwtThermoSetOrientation

def qwtThermoSetBorderWidth(*args):
  return _pv.qwtThermoSetBorderWidth(*args)
qwtThermoSetBorderWidth = _pv.qwtThermoSetBorderWidth

def qwtThermoSetFillColor(*args):
  return _pv.qwtThermoSetFillColor(*args)
qwtThermoSetFillColor = _pv.qwtThermoSetFillColor

def qwtThermoSetAlarmColor(*args):
  return _pv.qwtThermoSetAlarmColor(*args)
qwtThermoSetAlarmColor = _pv.qwtThermoSetAlarmColor

def qwtThermoSetAlarmLevel(*args):
  return _pv.qwtThermoSetAlarmLevel(*args)
qwtThermoSetAlarmLevel = _pv.qwtThermoSetAlarmLevel

def qwtThermoSetAlarmEnabled(*args):
  return _pv.qwtThermoSetAlarmEnabled(*args)
qwtThermoSetAlarmEnabled = _pv.qwtThermoSetAlarmEnabled

def qwtThermoSetPipeWidth(*args):
  return _pv.qwtThermoSetPipeWidth(*args)
qwtThermoSetPipeWidth = _pv.qwtThermoSetPipeWidth

def qwtThermoSetRange(*args):
  return _pv.qwtThermoSetRange(*args)
qwtThermoSetRange = _pv.qwtThermoSetRange

def qwtThermoSetMargin(*args):
  return _pv.qwtThermoSetMargin(*args)
qwtThermoSetMargin = _pv.qwtThermoSetMargin

def qwtThermoSetValue(*args):
  return _pv.qwtThermoSetValue(*args)
qwtThermoSetValue = _pv.qwtThermoSetValue

def qwtKnobSetScale(*args):
  return _pv.qwtKnobSetScale(*args)
qwtKnobSetScale = _pv.qwtKnobSetScale

def qwtKnobSetMass(*args):
  return _pv.qwtKnobSetMass(*args)
qwtKnobSetMass = _pv.qwtKnobSetMass

def qwtKnobSetOrientation(*args):
  return _pv.qwtKnobSetOrientation(*args)
qwtKnobSetOrientation = _pv.qwtKnobSetOrientation

def qwtKnobSetReadOnly(*args):
  return _pv.qwtKnobSetReadOnly(*args)
qwtKnobSetReadOnly = _pv.qwtKnobSetReadOnly

def qwtKnobSetKnobWidth(*args):
  return _pv.qwtKnobSetKnobWidth(*args)
qwtKnobSetKnobWidth = _pv.qwtKnobSetKnobWidth

def qwtKnobSetTotalAngle(*args):
  return _pv.qwtKnobSetTotalAngle(*args)
qwtKnobSetTotalAngle = _pv.qwtKnobSetTotalAngle

def qwtKnobSetBorderWidth(*args):
  return _pv.qwtKnobSetBorderWidth(*args)
qwtKnobSetBorderWidth = _pv.qwtKnobSetBorderWidth

def qwtKnobSetSymbol(*args):
  return _pv.qwtKnobSetSymbol(*args)
qwtKnobSetSymbol = _pv.qwtKnobSetSymbol

def qwtKnobSetValue(*args):
  return _pv.qwtKnobSetValue(*args)
qwtKnobSetValue = _pv.qwtKnobSetValue

def qwtCounterSetStep(*args):
  return _pv.qwtCounterSetStep(*args)
qwtCounterSetStep = _pv.qwtCounterSetStep

def qwtCounterSetMinValue(*args):
  return _pv.qwtCounterSetMinValue(*args)
qwtCounterSetMinValue = _pv.qwtCounterSetMinValue

def qwtCounterSetMaxValue(*args):
  return _pv.qwtCounterSetMaxValue(*args)
qwtCounterSetMaxValue = _pv.qwtCounterSetMaxValue

def qwtCounterSetStepButton1(*args):
  return _pv.qwtCounterSetStepButton1(*args)
qwtCounterSetStepButton1 = _pv.qwtCounterSetStepButton1

def qwtCounterSetStepButton2(*args):
  return _pv.qwtCounterSetStepButton2(*args)
qwtCounterSetStepButton2 = _pv.qwtCounterSetStepButton2

def qwtCounterSetStepButton3(*args):
  return _pv.qwtCounterSetStepButton3(*args)
qwtCounterSetStepButton3 = _pv.qwtCounterSetStepButton3

def qwtCounterSetNumButtons(*args):
  return _pv.qwtCounterSetNumButtons(*args)
qwtCounterSetNumButtons = _pv.qwtCounterSetNumButtons

def qwtCounterSetIncSteps(*args):
  return _pv.qwtCounterSetIncSteps(*args)
qwtCounterSetIncSteps = _pv.qwtCounterSetIncSteps

def qwtCounterSetValue(*args):
  return _pv.qwtCounterSetValue(*args)
qwtCounterSetValue = _pv.qwtCounterSetValue

def qwtWheelSetMass(*args):
  return _pv.qwtWheelSetMass(*args)
qwtWheelSetMass = _pv.qwtWheelSetMass

def qwtWheelSetOrientation(*args):
  return _pv.qwtWheelSetOrientation(*args)
qwtWheelSetOrientation = _pv.qwtWheelSetOrientation

def qwtWheelSetReadOnly(*args):
  return _pv.qwtWheelSetReadOnly(*args)
qwtWheelSetReadOnly = _pv.qwtWheelSetReadOnly

def qwtWheelSetTotalAngle(*args):
  return _pv.qwtWheelSetTotalAngle(*args)
qwtWheelSetTotalAngle = _pv.qwtWheelSetTotalAngle

def qwtWheelSetTickCnt(*args):
  return _pv.qwtWheelSetTickCnt(*args)
qwtWheelSetTickCnt = _pv.qwtWheelSetTickCnt

def qwtWheelSetViewAngle(*args):
  return _pv.qwtWheelSetViewAngle(*args)
qwtWheelSetViewAngle = _pv.qwtWheelSetViewAngle

def qwtWheelSetInternalBorder(*args):
  return _pv.qwtWheelSetInternalBorder(*args)
qwtWheelSetInternalBorder = _pv.qwtWheelSetInternalBorder

def qwtWheelSetWheelWidth(*args):
  return _pv.qwtWheelSetWheelWidth(*args)
qwtWheelSetWheelWidth = _pv.qwtWheelSetWheelWidth

def qwtWheelSetValue(*args):
  return _pv.qwtWheelSetValue(*args)
qwtWheelSetValue = _pv.qwtWheelSetValue

def qwtSliderSetScale(*args):
  return _pv.qwtSliderSetScale(*args)
qwtSliderSetScale = _pv.qwtSliderSetScale

def qwtSliderSetMass(*args):
  return _pv.qwtSliderSetMass(*args)
qwtSliderSetMass = _pv.qwtSliderSetMass

def qwtSliderSetOrientation(*args):
  return _pv.qwtSliderSetOrientation(*args)
qwtSliderSetOrientation = _pv.qwtSliderSetOrientation

def qwtSliderSetReadOnly(*args):
  return _pv.qwtSliderSetReadOnly(*args)
qwtSliderSetReadOnly = _pv.qwtSliderSetReadOnly

def qwtSliderSetBgStyle(*args):
  return _pv.qwtSliderSetBgStyle(*args)
qwtSliderSetBgStyle = _pv.qwtSliderSetBgStyle

def qwtSliderSetScalePos(*args):
  return _pv.qwtSliderSetScalePos(*args)
qwtSliderSetScalePos = _pv.qwtSliderSetScalePos

def qwtSliderSetThumbLength(*args):
  return _pv.qwtSliderSetThumbLength(*args)
qwtSliderSetThumbLength = _pv.qwtSliderSetThumbLength

def qwtSliderSetThumbWidth(*args):
  return _pv.qwtSliderSetThumbWidth(*args)
qwtSliderSetThumbWidth = _pv.qwtSliderSetThumbWidth

def qwtSliderSetBorderWidth(*args):
  return _pv.qwtSliderSetBorderWidth(*args)
qwtSliderSetBorderWidth = _pv.qwtSliderSetBorderWidth

def qwtSliderSetMargins(*args):
  return _pv.qwtSliderSetMargins(*args)
qwtSliderSetMargins = _pv.qwtSliderSetMargins

def qwtSliderSetValue(*args):
  return _pv.qwtSliderSetValue(*args)
qwtSliderSetValue = _pv.qwtSliderSetValue

def qwtCompassSetSimpleCompassRose(*args):
  return _pv.qwtCompassSetSimpleCompassRose(*args)
qwtCompassSetSimpleCompassRose = _pv.qwtCompassSetSimpleCompassRose

def qwtCompassSetRange(*args):
  return _pv.qwtCompassSetRange(*args)
qwtCompassSetRange = _pv.qwtCompassSetRange

def qwtCompassSetMass(*args):
  return _pv.qwtCompassSetMass(*args)
qwtCompassSetMass = _pv.qwtCompassSetMass

def qwtCompassSetReadOnly(*args):
  return _pv.qwtCompassSetReadOnly(*args)
qwtCompassSetReadOnly = _pv.qwtCompassSetReadOnly

def qwtCompassSetFrameShadow(*args):
  return _pv.qwtCompassSetFrameShadow(*args)
qwtCompassSetFrameShadow = _pv.qwtCompassSetFrameShadow

def qwtCompassShowBackground(*args):
  return _pv.qwtCompassShowBackground(*args)
qwtCompassShowBackground = _pv.qwtCompassShowBackground

def qwtCompassSetLineWidth(*args):
  return _pv.qwtCompassSetLineWidth(*args)
qwtCompassSetLineWidth = _pv.qwtCompassSetLineWidth

def qwtCompassSetMode(*args):
  return _pv.qwtCompassSetMode(*args)
qwtCompassSetMode = _pv.qwtCompassSetMode

def qwtCompassSetWrapping(*args):
  return _pv.qwtCompassSetWrapping(*args)
qwtCompassSetWrapping = _pv.qwtCompassSetWrapping

def qwtCompassSetScale(*args):
  return _pv.qwtCompassSetScale(*args)
qwtCompassSetScale = _pv.qwtCompassSetScale

def qwtCompassSetScaleArc(*args):
  return _pv.qwtCompassSetScaleArc(*args)
qwtCompassSetScaleArc = _pv.qwtCompassSetScaleArc

def qwtCompassSetOrigin(*args):
  return _pv.qwtCompassSetOrigin(*args)
qwtCompassSetOrigin = _pv.qwtCompassSetOrigin

def qwtCompassSetNeedle(*args):
  return _pv.qwtCompassSetNeedle(*args)
qwtCompassSetNeedle = _pv.qwtCompassSetNeedle

def qwtCompassSetValue(*args):
  return _pv.qwtCompassSetValue(*args)
qwtCompassSetValue = _pv.qwtCompassSetValue

def qwtDialSetRange(*args):
  return _pv.qwtDialSetRange(*args)
qwtDialSetRange = _pv.qwtDialSetRange

def qwtDialSetMass(*args):
  return _pv.qwtDialSetMass(*args)
qwtDialSetMass = _pv.qwtDialSetMass

def qwtDialSetReadOnly(*args):
  return _pv.qwtDialSetReadOnly(*args)
qwtDialSetReadOnly = _pv.qwtDialSetReadOnly

def qwtDialSetFrameShadow(*args):
  return _pv.qwtDialSetFrameShadow(*args)
qwtDialSetFrameShadow = _pv.qwtDialSetFrameShadow

def qwtDialShowBackground(*args):
  return _pv.qwtDialShowBackground(*args)
qwtDialShowBackground = _pv.qwtDialShowBackground

def qwtDialSetLineWidth(*args):
  return _pv.qwtDialSetLineWidth(*args)
qwtDialSetLineWidth = _pv.qwtDialSetLineWidth

def qwtDialSetMode(*args):
  return _pv.qwtDialSetMode(*args)
qwtDialSetMode = _pv.qwtDialSetMode

def qwtDialSetWrapping(*args):
  return _pv.qwtDialSetWrapping(*args)
qwtDialSetWrapping = _pv.qwtDialSetWrapping

def qwtDialSetScale(*args):
  return _pv.qwtDialSetScale(*args)
qwtDialSetScale = _pv.qwtDialSetScale

def qwtDialSetScaleArc(*args):
  return _pv.qwtDialSetScaleArc(*args)
qwtDialSetScaleArc = _pv.qwtDialSetScaleArc

def qwtDialSetOrigin(*args):
  return _pv.qwtDialSetOrigin(*args)
qwtDialSetOrigin = _pv.qwtDialSetOrigin

def qwtDialSetNeedle(*args):
  return _pv.qwtDialSetNeedle(*args)
qwtDialSetNeedle = _pv.qwtDialSetNeedle

def qwtDialSetValue(*args):
  return _pv.qwtDialSetValue(*args)
qwtDialSetValue = _pv.qwtDialSetValue

def qwtAnalogClockSetTime(*args):
  return _pv.qwtAnalogClockSetTime(*args)
qwtAnalogClockSetTime = _pv.qwtAnalogClockSetTime

def qwtAnalogClockSetMass(*args):
  return _pv.qwtAnalogClockSetMass(*args)
qwtAnalogClockSetMass = _pv.qwtAnalogClockSetMass

def qwtAnalogClockSetReadOnly(*args):
  return _pv.qwtAnalogClockSetReadOnly(*args)
qwtAnalogClockSetReadOnly = _pv.qwtAnalogClockSetReadOnly

def qwtAnalogClockSetFrameShadow(*args):
  return _pv.qwtAnalogClockSetFrameShadow(*args)
qwtAnalogClockSetFrameShadow = _pv.qwtAnalogClockSetFrameShadow

def qwtAnalogClockShowBackground(*args):
  return _pv.qwtAnalogClockShowBackground(*args)
qwtAnalogClockShowBackground = _pv.qwtAnalogClockShowBackground

def qwtAnalogClockSetLineWidth(*args):
  return _pv.qwtAnalogClockSetLineWidth(*args)
qwtAnalogClockSetLineWidth = _pv.qwtAnalogClockSetLineWidth

def qwtAnalogClockSetMode(*args):
  return _pv.qwtAnalogClockSetMode(*args)
qwtAnalogClockSetMode = _pv.qwtAnalogClockSetMode

def qwtAnalogClockSetWrapping(*args):
  return _pv.qwtAnalogClockSetWrapping(*args)
qwtAnalogClockSetWrapping = _pv.qwtAnalogClockSetWrapping

def qwtAnalogClockSetScale(*args):
  return _pv.qwtAnalogClockSetScale(*args)
qwtAnalogClockSetScale = _pv.qwtAnalogClockSetScale

def qwtAnalogClockSetScaleArc(*args):
  return _pv.qwtAnalogClockSetScaleArc(*args)
qwtAnalogClockSetScaleArc = _pv.qwtAnalogClockSetScaleArc

def qwtAnalogClockSetOrigin(*args):
  return _pv.qwtAnalogClockSetOrigin(*args)
qwtAnalogClockSetOrigin = _pv.qwtAnalogClockSetOrigin

def qwtAnalogClockSetNeedle(*args):
  return _pv.qwtAnalogClockSetNeedle(*args)
qwtAnalogClockSetNeedle = _pv.qwtAnalogClockSetNeedle

def qwtAnalogClockSetValue(*args):
  return _pv.qwtAnalogClockSetValue(*args)
qwtAnalogClockSetValue = _pv.qwtAnalogClockSetValue

def unit(*args):
  return _pv.unit(*args)
unit = _pv.unit

def textEventType(*args):
  return _pv.textEventType(*args)
textEventType = _pv.textEventType

def svgObjectName(*args):
  return _pv.svgObjectName(*args)
svgObjectName = _pv.svgObjectName

def getSvgBoundsOnElement(*args):
  return _pv.getSvgBoundsOnElement(*args)
getSvgBoundsOnElement = _pv.getSvgBoundsOnElement

def getSvgMatrixForElement(*args):
  return _pv.getSvgMatrixForElement(*args)
getSvgMatrixForElement = _pv.getSvgMatrixForElement

def getGeometry(*args):
  return _pv.getGeometry(*args)
getGeometry = _pv.getGeometry

def getParentWidgetId(*args):
  return _pv.getParentWidgetId(*args)
getParentWidgetId = _pv.getParentWidgetId
class pvWidgetIdManager(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, pvWidgetIdManager, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, pvWidgetIdManager, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pv.new_pvWidgetIdManager()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_pvWidgetIdManager
    __del__ = lambda self : None;
    def init(self, *args): return _pv.pvWidgetIdManager_init(self, *args)
    def newId(self, *args): return _pv.pvWidgetIdManager_newId(self, *args)
    def deleteWidget(self, *args): return _pv.pvWidgetIdManager_deleteWidget(self, *args)
    def id(self, *args): return _pv.pvWidgetIdManager_id(self, *args)
    def isInMap(self, *args): return _pv.pvWidgetIdManager_isInMap(self, *args)
    def firstId(self): return _pv.pvWidgetIdManager_firstId(self)
    def nextId(self): return _pv.pvWidgetIdManager_nextId(self)
    def endId(self): return _pv.pvWidgetIdManager_endId(self)
    def name(self, *args): return _pv.pvWidgetIdManager_name(self, *args)
    def idStart(self): return _pv.pvWidgetIdManager_idStart(self)
    def readEnumFromMask(self, *args): return _pv.pvWidgetIdManager_readEnumFromMask(self, *args)
pvWidgetIdManager_swigregister = _pv.pvWidgetIdManager_swigregister
pvWidgetIdManager_swigregister(pvWidgetIdManager)

class qtDatabase(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, qtDatabase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, qtDatabase, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _pv.new_qtDatabase()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _pv.delete_qtDatabase
    __del__ = lambda self : None;
    def open(self, *args): return _pv.qtDatabase_open(self, *args)
    def close(self): return _pv.qtDatabase_close(self)
    def query(self, *args): return _pv.qtDatabase_query(self, *args)
    def populateTable(self, *args): return _pv.qtDatabase_populateTable(self, *args)
    def recordFieldValue(self, *args): return _pv.qtDatabase_recordFieldValue(self, *args)
    def dbQuery(self, *args): return _pv.qtDatabase_dbQuery(self, *args)
    def dbRecordFieldValue(self, *args): return _pv.qtDatabase_dbRecordFieldValue(self, *args)
    def nextRecord(self): return _pv.qtDatabase_nextRecord(self)
    __swig_setmethods__["connectionName"] = _pv.qtDatabase_connectionName_set
    __swig_getmethods__["connectionName"] = _pv.qtDatabase_connectionName_get
    if _newclass:connectionName = _swig_property(_pv.qtDatabase_connectionName_get, _pv.qtDatabase_connectionName_set)
    __swig_setmethods__["db"] = _pv.qtDatabase_db_set
    __swig_getmethods__["db"] = _pv.qtDatabase_db_get
    if _newclass:db = _swig_property(_pv.qtDatabase_db_get, _pv.qtDatabase_db_set)
    __swig_setmethods__["result"] = _pv.qtDatabase_result_set
    __swig_getmethods__["result"] = _pv.qtDatabase_result_get
    if _newclass:result = _swig_property(_pv.qtDatabase_result_get, _pv.qtDatabase_result_set)
    __swig_setmethods__["error"] = _pv.qtDatabase_error_set
    __swig_getmethods__["error"] = _pv.qtDatabase_error_get
    if _newclass:error = _swig_property(_pv.qtDatabase_error_get, _pv.qtDatabase_error_set)
qtDatabase_swigregister = _pv.qtDatabase_swigregister
qtDatabase_swigregister(qtDatabase)


def getParam(*args):
  return _pv.getParam(*args)
getParam = _pv.getParam

def pvQImageScript(*args):
  return _pv.pvQImageScript(*args)
pvQImageScript = _pv.pvQImageScript

def new_int(*args):
  return _pv.new_int(*args)
new_int = _pv.new_int

def get_int(*args):
  return _pv.get_int(*args)
get_int = _pv.get_int

def delete_int(*args):
  return _pv.delete_int(*args)
delete_int = _pv.delete_int
# This file is compatible with both classic and new-style classes.


