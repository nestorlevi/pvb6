.TH "QwtCompass" 3 "Thu Sep 28 2023" "ProcessViewBrowser-ServerProgramming" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QwtCompass
.SH SYNOPSIS
.br
.PP
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBqwtCompassSetSimpleCompassRose\fP (\fBPARAM\fP *p, int id, int numThorns, int numThornLevels, float width=0\&.2f)"
.br
.ti -1c
.RI "int \fBqwtCompassSetRange\fP (\fBPARAM\fP *p, int id, float vmin, float vmax, float step=0\&.0f)"
.br
.ti -1c
.RI "int \fBqwtCompassSetMass\fP (\fBPARAM\fP *p, int id, float mass)"
.br
.ti -1c
.RI "int \fBqwtCompassSetReadOnly\fP (\fBPARAM\fP *p, int id, int rdonly)"
.br
.ti -1c
.RI "int \fBqwtCompassSetFrameShadow\fP (\fBPARAM\fP *p, int id, int shadow)"
.br
.ti -1c
.RI "int \fBqwtCompassShowBackground\fP (\fBPARAM\fP *p, int id, int show)"
.br
.ti -1c
.RI "int \fBqwtCompassSetLineWidth\fP (\fBPARAM\fP *p, int id, int width)"
.br
.ti -1c
.RI "int \fBqwtCompassSetMode\fP (\fBPARAM\fP *p, int id, int mode)"
.br
.ti -1c
.RI "int \fBqwtCompassSetWrapping\fP (\fBPARAM\fP *p, int id, int wrap)"
.br
.ti -1c
.RI "int \fBqwtCompassSetScale\fP (\fBPARAM\fP *p, int id, int maxMajIntv, int maxMinIntv, float step)"
.br
.ti -1c
.RI "int \fBqwtCompassSetScaleArc\fP (\fBPARAM\fP *p, int id, float min, float max)"
.br
.ti -1c
.RI "int \fBqwtCompassSetOrigin\fP (\fBPARAM\fP *p, int id, float o)"
.br
.ti -1c
.RI "int \fBqwtCompassSetNeedle\fP (\fBPARAM\fP *p, int id, int which, int r1=0, int g1=0, int b1=0, int r2=255, int g2=255, int b2=255, int r3=128, int g3=128, int b3=128)"
.br
.ti -1c
.RI "int \fBqwtCompassSetValue\fP (\fBPARAM\fP *p, int id, float value)"
.br
.in -1c
.SH "Detailed Description"
.PP 
QwtCompass Widget 
.SH "Function Documentation"
.PP 
.SS "int qwtCompassSetFrameShadow (\fBPARAM\fP * p, int id, int shadow)"

.PP
.nf

\fBDialShadow\fP\&.
.fi
.PP
 
.SS "int qwtCompassSetLineWidth (\fBPARAM\fP * p, int id, int width)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetMass (\fBPARAM\fP * p, int id, float mass)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetMode (\fBPARAM\fP * p, int id, int mode)"

.PP
.nf

\fBDialMode\fP\&.
.fi
.PP
 
.SS "int qwtCompassSetNeedle (\fBPARAM\fP * p, int id, int which, int r1 = \fC0\fP, int g1 = \fC0\fP, int b1 = \fC0\fP, int r2 = \fC255\fP, int g2 = \fC255\fP, int b2 = \fC255\fP, int r3 = \fC128\fP, int g3 = \fC128\fP, int b3 = \fC128\fP)"

.PP
.nf

which = \fBCompassNeedle\fP\&.
.fi
.PP
 
.SS "int qwtCompassSetOrigin (\fBPARAM\fP * p, int id, float o)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetRange (\fBPARAM\fP * p, int id, float vmin, float vmax, float step = \fC0\&.0f\fP)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetReadOnly (\fBPARAM\fP * p, int id, int rdonly)"

.PP
.nf

rdonly = 0 | 1
.fi
.PP
 
.SS "int qwtCompassSetScale (\fBPARAM\fP * p, int id, int maxMajIntv, int maxMinIntv, float step)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetScaleArc (\fBPARAM\fP * p, int id, float min, float max)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetSimpleCompassRose (\fBPARAM\fP * p, int id, int numThorns, int numThornLevels, float width = \fC0\&.2f\fP)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetValue (\fBPARAM\fP * p, int id, float value)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassSetWrapping (\fBPARAM\fP * p, int id, int wrap)"

.PP
.nf

.fi
.PP
 
.SS "int qwtCompassShowBackground (\fBPARAM\fP * p, int id, int show)"

.PP
.nf

.fi
.PP
 
.SH "Author"
.PP 
Generated automatically by Doxygen for ProcessViewBrowser-ServerProgramming from the source code\&.
